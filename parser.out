Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM seen_program SEMICOLON programaopciones MAIN seen_main bloqueprincipal endproc
Rule 2     e -> <empty>
Rule 3     programaopciones -> opcionesdeclarar programaopciones
Rule 4     programaopciones -> e
Rule 5     opcionesdeclarar -> globalvars
Rule 6     opcionesdeclarar -> declarafuncion
Rule 7     declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc
Rule 8     tipofunc -> tipo
Rule 9     tipofunc -> VOID
Rule 10    globalvars -> GLOBAL seen_global variables
Rule 11    tipo -> INTEGER
Rule 12    tipo -> FLOAT
Rule 13    tipo -> STRING
Rule 14    tipo -> CHAR
Rule 15    tipo -> BOOLEAN
Rule 16    listaids -> ID seen_declara_variables esarr masids
Rule 17    esarr -> L_BRACKET INT R_BRACKET
Rule 18    esarr -> e
Rule 19    masids -> COMA listaids
Rule 20    masids -> e
Rule 21    declaraparametros -> tipo ID opcionesdp seen_paso2_def_proc listadp
Rule 22    declaraparametros -> e
Rule 23    opcionesdp -> L_BRACKET R_BRACKET
Rule 24    opcionesdp -> e
Rule 25    listadp -> COMA declaraparametros
Rule 26    listadp -> e
Rule 27    bloque -> L_BRACE listaestatutos R_BRACE
Rule 28    bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE
Rule 29    listaestatutos -> estatuto listaestatutos
Rule 30    listaestatutos -> e
Rule 31    listaestatutosprincipal -> estatuto listaestatutosprincipal
Rule 32    listaestatutosprincipal -> variables listaestatutosprincipal
Rule 33    listaestatutosprincipal -> e
Rule 34    estatuto -> asignacion SEMICOLON
Rule 35    estatuto -> if
Rule 36    estatuto -> escritura
Rule 37    estatuto -> scan
Rule 38    estatuto -> ciclo
Rule 39    estatuto -> llamafunc
Rule 40    estatuto -> RETURN exp seen_return SEMICOLON
Rule 41    llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON
Rule 42    asignacion -> ID opesarr EQUALS seen_equals castono equals_pendiente
Rule 43    opesarr -> L_BRACKET exp R_BRACKET
Rule 44    opesarr -> e
Rule 45    aritmetica -> term paso5_cuadruplo opexp
Rule 46    term -> factor paso4_cuadruplo opterm
Rule 47    factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo
Rule 48    factor -> INT paso1_int_cuadruplo
Rule 49    factor -> FLT paso1_float_cuadruplo
Rule 50    factor -> TRUE paso1_bool_cuadruplo
Rule 51    factor -> FALSE paso1_bool_cuadruplo
Rule 52    factor -> CHR paso1_char_cuadruplo
Rule 53    factor -> STRNG paso1_string_cuadruplo
Rule 54    factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo
Rule 55    opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub
Rule 56    opidfactor -> L_BRACKET exp R_BRACKET
Rule 57    opidfactor -> e
Rule 58    listargs -> exp seen_argumento_funcion masargs
Rule 59    listargs -> e
Rule 60    masargs -> COMA listargs
Rule 61    masargs -> e
Rule 62    opterm -> MULTIPLY paso2y3_cuadruplos term
Rule 63    opterm -> DIVIDE paso2y3_cuadruplos term
Rule 64    opterm -> e
Rule 65    opexp -> PLUS paso2y3_cuadruplos aritmetica
Rule 66    opexp -> MINUS paso2y3_cuadruplos aritmetica
Rule 67    opexp -> e
Rule 68    castono -> castto L_PARENTHESIS exp R_PARENTHESIS
Rule 69    castono -> exp
Rule 70    castto -> STRING
Rule 71    castto -> CHAR
Rule 72    castto -> INTEGER
Rule 73    castto -> FLOAT
Rule 74    exp -> exp_and if_paso3_cuadruplo listaor
Rule 75    listaor -> OR if_paso1_cuadruplo exp
Rule 76    listaor -> e
Rule 77    exp_and -> opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
Rule 78    listand -> AND if_paso2_cuadruplo exp_and
Rule 79    listand -> e
Rule 80    exp_bcomp -> aritmetica esComp
Rule 81    esComp -> bexpop if_paso6_cuadruplo aritmetica if_paso7_cuadruplo
Rule 82    esComp -> e
Rule 83    opcnegar -> NOT if_paso5_cuadruplo
Rule 84    opcnegar -> e
Rule 85    bexpop -> L_THAN
Rule 86    bexpop -> G_THAN
Rule 87    bexpop -> EQUALS_C
Rule 88    bexpop -> DIFFERENT
Rule 89    bexpop -> LE_THAN
Rule 90    bexpop -> GE_THAN
Rule 91    escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print
Rule 92    scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan
Rule 93    variables -> tipo seen_tipo_var listaids SEMICOLON
Rule 94    ciclo -> while
Rule 95    ciclo -> dowhile
Rule 96    ciclo -> for
Rule 97    while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo
Rule 98    dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON
Rule 99    for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo
Rule 100   increment -> asignacion listaincrement
Rule 101   listaincrement -> COMA increment
Rule 102   listaincrement -> e
Rule 103   if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo
Rule 104   listaelif -> elif listaelif
Rule 105   listaelif -> e
Rule 106   elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque
Rule 107   else -> if_paso3_codigo ELSE bloque
Rule 108   else -> e
Rule 109   seen_main -> <empty>
Rule 110   seen_funcion -> <empty>
Rule 111   seen_paso2_def_proc -> <empty>
Rule 112   seen_global -> <empty>
Rule 113   seen_tipo_var -> <empty>
Rule 114   seen_declara_variables -> <empty>
Rule 115   seen_program -> <empty>
Rule 116   endproc -> <empty>
Rule 117   seen_return -> <empty>
Rule 118   seen_llamada_func -> <empty>
Rule 119   seen_llamada_func_factor -> <empty>
Rule 120   seen_argumento_funcion -> <empty>
Rule 121   seen_verifica_cant_args -> <empty>
Rule 122   gosub -> <empty>
Rule 123   seen_id_factor -> <empty>
Rule 124   seen_dir_inicio -> <empty>
Rule 125   paso1_id_cuadruplo -> <empty>
Rule 126   paso1_int_cuadruplo -> <empty>
Rule 127   paso1_float_cuadruplo -> <empty>
Rule 128   paso1_string_cuadruplo -> <empty>
Rule 129   paso1_char_cuadruplo -> <empty>
Rule 130   paso1_bool_cuadruplo -> <empty>
Rule 131   paso2y3_cuadruplos -> <empty>
Rule 132   paso4_cuadruplo -> <empty>
Rule 133   paso5_cuadruplo -> <empty>
Rule 134   paso6_cuadruplo -> <empty>
Rule 135   paso7_cuadruplo -> <empty>
Rule 136   if_paso1_cuadruplo -> <empty>
Rule 137   if_paso2_cuadruplo -> <empty>
Rule 138   if_paso3_cuadruplo -> <empty>
Rule 139   if_paso4_cuadruplo -> <empty>
Rule 140   if_paso5_cuadruplo -> <empty>
Rule 141   if_paso6_cuadruplo -> <empty>
Rule 142   if_paso7_cuadruplo -> <empty>
Rule 143   if_paso8_cuadruplo -> <empty>
Rule 144   seen_equals -> <empty>
Rule 145   equals_pendiente -> <empty>
Rule 146   seen_scan -> <empty>
Rule 147   seen_print -> <empty>
Rule 148   if_paso1_codigo -> <empty>
Rule 149   if_paso2_codigo -> <empty>
Rule 150   if_paso3_codigo -> <empty>
Rule 151   if_paso4_codigo -> <empty>
Rule 152   while_paso1_codigo -> <empty>
Rule 153   while_paso2_codigo -> <empty>
Rule 154   while_paso3_codigo -> <empty>
Rule 155   dowhile_paso4_codigo -> <empty>
Rule 156   for_paso1_codigo -> <empty>
Rule 157   for_paso2_codigo -> <empty>
Rule 158   for_paso3_codigo -> <empty>
Rule 159   for_paso4_codigo -> <empty>
Rule 160   for_paso5_codigo -> <empty>

Terminals, with rules where they appear

AND                  : 78
BOOLEAN              : 15
CHAR                 : 14 71
CHR                  : 52
COMA                 : 19 25 60 101
DIFFERENT            : 88
DIVIDE               : 63
DO                   : 98
ELIF                 : 106
ELSE                 : 107
EQUALS               : 42
EQUALS_C             : 87
FALSE                : 51
FLOAT                : 12 73
FLT                  : 49
FOR                  : 99
FUNC                 : 7
GE_THAN              : 90
GLOBAL               : 10
G_THAN               : 86
ID                   : 7 16 21 41 42 47 92
IF                   : 103
INT                  : 17 48
INTEGER              : 11 72
LE_THAN              : 89
L_BRACE              : 27 28
L_BRACKET            : 17 23 43 56
L_PARENTHESIS        : 7 41 54 55 68 91 92 97 98 99 103 106
L_THAN               : 85
MAIN                 : 1
MINUS                : 66
MULTIPLY             : 62
NOT                  : 83
OR                   : 75
PLUS                 : 65
PRINT                : 91
PROGRAM              : 1
RETURN               : 40
R_BRACE              : 27 28
R_BRACKET            : 17 23 43 56
R_PARENTHESIS        : 7 41 54 55 68 91 92 97 98 99 103 106
SCAN                 : 92
SEMICOLON            : 1 34 40 41 91 92 93 98 99
STRING               : 13 70
STRNG                : 53
TRUE                 : 50
VOID                 : 9
WHILE                : 97 98
error                : 

Nonterminals, with rules where they appear

aritmetica           : 65 66 80 81
asignacion           : 34 100
bexpop               : 81
bloque               : 97 98 99 103 106 107
bloqueprincipal      : 1 7
castono              : 42
castto               : 68
ciclo                : 38
declarafuncion       : 6
declaraparametros    : 7 25
dowhile              : 95
dowhile_paso4_codigo : 98
e                    : 4 18 20 22 24 26 30 33 44 57 59 61 64 67 76 79 82 84 102 105 108
elif                 : 104
else                 : 103
endproc              : 1 7
equals_pendiente     : 42
esComp               : 80
esarr                : 16
escritura            : 36
estatuto             : 29 31
exp                  : 40 43 54 56 58 68 69 75 91 97 98 99 103 106
exp_and              : 74 78
exp_bcomp            : 77
factor               : 46
for                  : 96
for_paso1_codigo     : 99
for_paso2_codigo     : 99
for_paso3_codigo     : 99
for_paso4_codigo     : 99
for_paso5_codigo     : 99
globalvars           : 5
gosub                : 41 55
if                   : 35
if_paso1_codigo      : 103
if_paso1_cuadruplo   : 75
if_paso2_codigo      : 103
if_paso2_cuadruplo   : 78
if_paso3_codigo      : 107
if_paso3_cuadruplo   : 74
if_paso4_codigo      : 106
if_paso4_cuadruplo   : 77
if_paso5_cuadruplo   : 83
if_paso6_cuadruplo   : 81
if_paso7_cuadruplo   : 81
if_paso8_cuadruplo   : 77
increment            : 99 101
listadp              : 21
listaelif            : 103 104
listaestatutos       : 27 29
listaestatutosprincipal : 28 31 32
listaids             : 19 93
listaincrement       : 100
listand              : 77
listaor              : 74
listargs             : 41 55 60
llamafunc            : 39
masargs              : 58
masids               : 16
opcionesdeclarar     : 3
opcionesdp           : 21
opcnegar             : 77
opesarr              : 42
opexp                : 45
opidfactor           : 47
opterm               : 46
paso1_bool_cuadruplo : 50 51
paso1_char_cuadruplo : 52
paso1_float_cuadruplo : 49
paso1_id_cuadruplo   : 47
paso1_int_cuadruplo  : 48
paso1_string_cuadruplo : 53
paso2y3_cuadruplos   : 62 63 65 66
paso4_cuadruplo      : 46
paso5_cuadruplo      : 45
paso6_cuadruplo      : 54
paso7_cuadruplo      : 54
program              : 0
programaopciones     : 1 3
scan                 : 37
seen_argumento_funcion : 58
seen_declara_variables : 16
seen_dir_inicio      : 7
seen_equals          : 42
seen_funcion         : 7
seen_global          : 10
seen_id_factor       : 41 47
seen_llamada_func    : 41
seen_llamada_func_factor : 55
seen_main            : 1
seen_paso2_def_proc  : 21
seen_print           : 91
seen_program         : 1
seen_return          : 40
seen_scan            : 92
seen_tipo_var        : 93
seen_verifica_cant_args : 41
term                 : 45 62 63
tipo                 : 8 21 93
tipofunc             : 7
variables            : 10 32
while                : 94
while_paso1_codigo   : 97 98
while_paso2_codigo   : 97
while_paso3_codigo   : 97

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM seen_program SEMICOLON programaopciones MAIN seen_main bloqueprincipal endproc

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . seen_program SEMICOLON programaopciones MAIN seen_main bloqueprincipal endproc
    (115) seen_program -> .

    SEMICOLON       reduce using rule 115 (seen_program -> .)

    seen_program                   shift and go to state 3

state 3

    (1) program -> PROGRAM seen_program . SEMICOLON programaopciones MAIN seen_main bloqueprincipal endproc

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM seen_program SEMICOLON . programaopciones MAIN seen_main bloqueprincipal endproc
    (3) programaopciones -> . opcionesdeclarar programaopciones
    (4) programaopciones -> . e
    (5) opcionesdeclarar -> . globalvars
    (6) opcionesdeclarar -> . declarafuncion
    (2) e -> .
    (10) globalvars -> . GLOBAL seen_global variables
    (7) declarafuncion -> . tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc
    (8) tipofunc -> . tipo
    (9) tipofunc -> . VOID
    (11) tipo -> . INTEGER
    (12) tipo -> . FLOAT
    (13) tipo -> . STRING
    (14) tipo -> . CHAR
    (15) tipo -> . BOOLEAN

    MAIN            reduce using rule 2 (e -> .)
    GLOBAL          shift and go to state 5
    VOID            shift and go to state 12
    INTEGER         shift and go to state 11
    FLOAT           shift and go to state 16
    STRING          shift and go to state 7
    CHAR            shift and go to state 6
    BOOLEAN         shift and go to state 17

    declarafuncion                 shift and go to state 8
    opcionesdeclarar               shift and go to state 13
    e                              shift and go to state 14
    tipo                           shift and go to state 15
    programaopciones               shift and go to state 9
    globalvars                     shift and go to state 10
    tipofunc                       shift and go to state 18

state 5

    (10) globalvars -> GLOBAL . seen_global variables
    (112) seen_global -> .

    INTEGER         reduce using rule 112 (seen_global -> .)
    FLOAT           reduce using rule 112 (seen_global -> .)
    STRING          reduce using rule 112 (seen_global -> .)
    CHAR            reduce using rule 112 (seen_global -> .)
    BOOLEAN         reduce using rule 112 (seen_global -> .)

    seen_global                    shift and go to state 19

state 6

    (14) tipo -> CHAR .

    ID              reduce using rule 14 (tipo -> CHAR .)
    FUNC            reduce using rule 14 (tipo -> CHAR .)


state 7

    (13) tipo -> STRING .

    ID              reduce using rule 13 (tipo -> STRING .)
    FUNC            reduce using rule 13 (tipo -> STRING .)


state 8

    (6) opcionesdeclarar -> declarafuncion .

    GLOBAL          reduce using rule 6 (opcionesdeclarar -> declarafuncion .)
    VOID            reduce using rule 6 (opcionesdeclarar -> declarafuncion .)
    INTEGER         reduce using rule 6 (opcionesdeclarar -> declarafuncion .)
    FLOAT           reduce using rule 6 (opcionesdeclarar -> declarafuncion .)
    STRING          reduce using rule 6 (opcionesdeclarar -> declarafuncion .)
    CHAR            reduce using rule 6 (opcionesdeclarar -> declarafuncion .)
    BOOLEAN         reduce using rule 6 (opcionesdeclarar -> declarafuncion .)
    MAIN            reduce using rule 6 (opcionesdeclarar -> declarafuncion .)


state 9

    (1) program -> PROGRAM seen_program SEMICOLON programaopciones . MAIN seen_main bloqueprincipal endproc

    MAIN            shift and go to state 20


state 10

    (5) opcionesdeclarar -> globalvars .

    GLOBAL          reduce using rule 5 (opcionesdeclarar -> globalvars .)
    VOID            reduce using rule 5 (opcionesdeclarar -> globalvars .)
    INTEGER         reduce using rule 5 (opcionesdeclarar -> globalvars .)
    FLOAT           reduce using rule 5 (opcionesdeclarar -> globalvars .)
    STRING          reduce using rule 5 (opcionesdeclarar -> globalvars .)
    CHAR            reduce using rule 5 (opcionesdeclarar -> globalvars .)
    BOOLEAN         reduce using rule 5 (opcionesdeclarar -> globalvars .)
    MAIN            reduce using rule 5 (opcionesdeclarar -> globalvars .)


state 11

    (11) tipo -> INTEGER .

    ID              reduce using rule 11 (tipo -> INTEGER .)
    FUNC            reduce using rule 11 (tipo -> INTEGER .)


state 12

    (9) tipofunc -> VOID .

    FUNC            reduce using rule 9 (tipofunc -> VOID .)


state 13

    (3) programaopciones -> opcionesdeclarar . programaopciones
    (3) programaopciones -> . opcionesdeclarar programaopciones
    (4) programaopciones -> . e
    (5) opcionesdeclarar -> . globalvars
    (6) opcionesdeclarar -> . declarafuncion
    (2) e -> .
    (10) globalvars -> . GLOBAL seen_global variables
    (7) declarafuncion -> . tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc
    (8) tipofunc -> . tipo
    (9) tipofunc -> . VOID
    (11) tipo -> . INTEGER
    (12) tipo -> . FLOAT
    (13) tipo -> . STRING
    (14) tipo -> . CHAR
    (15) tipo -> . BOOLEAN

    MAIN            reduce using rule 2 (e -> .)
    GLOBAL          shift and go to state 5
    VOID            shift and go to state 12
    INTEGER         shift and go to state 11
    FLOAT           shift and go to state 16
    STRING          shift and go to state 7
    CHAR            shift and go to state 6
    BOOLEAN         shift and go to state 17

    declarafuncion                 shift and go to state 8
    opcionesdeclarar               shift and go to state 13
    e                              shift and go to state 14
    tipo                           shift and go to state 15
    programaopciones               shift and go to state 21
    globalvars                     shift and go to state 10
    tipofunc                       shift and go to state 18

state 14

    (4) programaopciones -> e .

    MAIN            reduce using rule 4 (programaopciones -> e .)


state 15

    (8) tipofunc -> tipo .

    FUNC            reduce using rule 8 (tipofunc -> tipo .)


state 16

    (12) tipo -> FLOAT .

    ID              reduce using rule 12 (tipo -> FLOAT .)
    FUNC            reduce using rule 12 (tipo -> FLOAT .)


state 17

    (15) tipo -> BOOLEAN .

    ID              reduce using rule 15 (tipo -> BOOLEAN .)
    FUNC            reduce using rule 15 (tipo -> BOOLEAN .)


state 18

    (7) declarafuncion -> tipofunc . FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc

    FUNC            shift and go to state 22


state 19

    (10) globalvars -> GLOBAL seen_global . variables
    (93) variables -> . tipo seen_tipo_var listaids SEMICOLON
    (11) tipo -> . INTEGER
    (12) tipo -> . FLOAT
    (13) tipo -> . STRING
    (14) tipo -> . CHAR
    (15) tipo -> . BOOLEAN

    INTEGER         shift and go to state 11
    FLOAT           shift and go to state 16
    STRING          shift and go to state 7
    CHAR            shift and go to state 6
    BOOLEAN         shift and go to state 17

    variables                      shift and go to state 24
    tipo                           shift and go to state 23

state 20

    (1) program -> PROGRAM seen_program SEMICOLON programaopciones MAIN . seen_main bloqueprincipal endproc
    (109) seen_main -> .

    L_BRACE         reduce using rule 109 (seen_main -> .)

    seen_main                      shift and go to state 25

state 21

    (3) programaopciones -> opcionesdeclarar programaopciones .

    MAIN            reduce using rule 3 (programaopciones -> opcionesdeclarar programaopciones .)


state 22

    (7) declarafuncion -> tipofunc FUNC . ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc

    ID              shift and go to state 26


state 23

    (93) variables -> tipo . seen_tipo_var listaids SEMICOLON
    (113) seen_tipo_var -> .

    ID              reduce using rule 113 (seen_tipo_var -> .)

    seen_tipo_var                  shift and go to state 27

state 24

    (10) globalvars -> GLOBAL seen_global variables .

    GLOBAL          reduce using rule 10 (globalvars -> GLOBAL seen_global variables .)
    VOID            reduce using rule 10 (globalvars -> GLOBAL seen_global variables .)
    INTEGER         reduce using rule 10 (globalvars -> GLOBAL seen_global variables .)
    FLOAT           reduce using rule 10 (globalvars -> GLOBAL seen_global variables .)
    STRING          reduce using rule 10 (globalvars -> GLOBAL seen_global variables .)
    CHAR            reduce using rule 10 (globalvars -> GLOBAL seen_global variables .)
    BOOLEAN         reduce using rule 10 (globalvars -> GLOBAL seen_global variables .)
    MAIN            reduce using rule 10 (globalvars -> GLOBAL seen_global variables .)


state 25

    (1) program -> PROGRAM seen_program SEMICOLON programaopciones MAIN seen_main . bloqueprincipal endproc
    (28) bloqueprincipal -> . L_BRACE listaestatutosprincipal R_BRACE

    L_BRACE         shift and go to state 29

    bloqueprincipal                shift and go to state 28

state 26

    (7) declarafuncion -> tipofunc FUNC ID . seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc
    (110) seen_funcion -> .

    L_PARENTHESIS   reduce using rule 110 (seen_funcion -> .)

    seen_funcion                   shift and go to state 30

state 27

    (93) variables -> tipo seen_tipo_var . listaids SEMICOLON
    (16) listaids -> . ID seen_declara_variables esarr masids

    ID              shift and go to state 32

    listaids                       shift and go to state 31

state 28

    (1) program -> PROGRAM seen_program SEMICOLON programaopciones MAIN seen_main bloqueprincipal . endproc
    (116) endproc -> .

    $end            reduce using rule 116 (endproc -> .)

    endproc                        shift and go to state 33

state 29

    (28) bloqueprincipal -> L_BRACE . listaestatutosprincipal R_BRACE
    (31) listaestatutosprincipal -> . estatuto listaestatutosprincipal
    (32) listaestatutosprincipal -> . variables listaestatutosprincipal
    (33) listaestatutosprincipal -> . e
    (34) estatuto -> . asignacion SEMICOLON
    (35) estatuto -> . if
    (36) estatuto -> . escritura
    (37) estatuto -> . scan
    (38) estatuto -> . ciclo
    (39) estatuto -> . llamafunc
    (40) estatuto -> . RETURN exp seen_return SEMICOLON
    (93) variables -> . tipo seen_tipo_var listaids SEMICOLON
    (2) e -> .
    (42) asignacion -> . ID opesarr EQUALS seen_equals castono equals_pendiente
    (103) if -> . IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo
    (91) escritura -> . PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print
    (92) scan -> . SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan
    (94) ciclo -> . while
    (95) ciclo -> . dowhile
    (96) ciclo -> . for
    (41) llamafunc -> . ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON
    (11) tipo -> . INTEGER
    (12) tipo -> . FLOAT
    (13) tipo -> . STRING
    (14) tipo -> . CHAR
    (15) tipo -> . BOOLEAN
    (97) while -> . WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo
    (98) dowhile -> . DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON
    (99) for -> . FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo

    RETURN          shift and go to state 35
    R_BRACE         reduce using rule 2 (e -> .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    PRINT           shift and go to state 39
    SCAN            shift and go to state 48
    INTEGER         shift and go to state 11
    FLOAT           shift and go to state 16
    STRING          shift and go to state 7
    CHAR            shift and go to state 6
    BOOLEAN         shift and go to state 17
    WHILE           shift and go to state 38
    DO              shift and go to state 34
    FOR             shift and go to state 49

    scan                           shift and go to state 36
    variables                      shift and go to state 37
    if                             shift and go to state 40
    listaestatutosprincipal        shift and go to state 41
    ciclo                          shift and go to state 42
    tipo                           shift and go to state 23
    llamafunc                      shift and go to state 43
    estatuto                       shift and go to state 44
    dowhile                        shift and go to state 47
    e                              shift and go to state 52
    for                            shift and go to state 46
    asignacion                     shift and go to state 53
    while                          shift and go to state 45
    escritura                      shift and go to state 54

state 30

    (7) declarafuncion -> tipofunc FUNC ID seen_funcion . L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc

    L_PARENTHESIS   shift and go to state 55


state 31

    (93) variables -> tipo seen_tipo_var listaids . SEMICOLON

    SEMICOLON       shift and go to state 56


state 32

    (16) listaids -> ID . seen_declara_variables esarr masids
    (114) seen_declara_variables -> .

    L_BRACKET       reduce using rule 114 (seen_declara_variables -> .)
    COMA            reduce using rule 114 (seen_declara_variables -> .)
    SEMICOLON       reduce using rule 114 (seen_declara_variables -> .)

    seen_declara_variables         shift and go to state 57

state 33

    (1) program -> PROGRAM seen_program SEMICOLON programaopciones MAIN seen_main bloqueprincipal endproc .

    $end            reduce using rule 1 (program -> PROGRAM seen_program SEMICOLON programaopciones MAIN seen_main bloqueprincipal endproc .)


state 34

    (98) dowhile -> DO . while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON
    (152) while_paso1_codigo -> .

    L_BRACE         reduce using rule 152 (while_paso1_codigo -> .)

    while_paso1_codigo             shift and go to state 58

state 35

    (40) estatuto -> RETURN . exp seen_return SEMICOLON
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 61
    e                              shift and go to state 63

state 36

    (37) estatuto -> scan .

    RETURN          reduce using rule 37 (estatuto -> scan .)
    ID              reduce using rule 37 (estatuto -> scan .)
    IF              reduce using rule 37 (estatuto -> scan .)
    PRINT           reduce using rule 37 (estatuto -> scan .)
    SCAN            reduce using rule 37 (estatuto -> scan .)
    INTEGER         reduce using rule 37 (estatuto -> scan .)
    FLOAT           reduce using rule 37 (estatuto -> scan .)
    STRING          reduce using rule 37 (estatuto -> scan .)
    CHAR            reduce using rule 37 (estatuto -> scan .)
    BOOLEAN         reduce using rule 37 (estatuto -> scan .)
    WHILE           reduce using rule 37 (estatuto -> scan .)
    DO              reduce using rule 37 (estatuto -> scan .)
    FOR             reduce using rule 37 (estatuto -> scan .)
    R_BRACE         reduce using rule 37 (estatuto -> scan .)


state 37

    (32) listaestatutosprincipal -> variables . listaestatutosprincipal
    (31) listaestatutosprincipal -> . estatuto listaestatutosprincipal
    (32) listaestatutosprincipal -> . variables listaestatutosprincipal
    (33) listaestatutosprincipal -> . e
    (34) estatuto -> . asignacion SEMICOLON
    (35) estatuto -> . if
    (36) estatuto -> . escritura
    (37) estatuto -> . scan
    (38) estatuto -> . ciclo
    (39) estatuto -> . llamafunc
    (40) estatuto -> . RETURN exp seen_return SEMICOLON
    (93) variables -> . tipo seen_tipo_var listaids SEMICOLON
    (2) e -> .
    (42) asignacion -> . ID opesarr EQUALS seen_equals castono equals_pendiente
    (103) if -> . IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo
    (91) escritura -> . PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print
    (92) scan -> . SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan
    (94) ciclo -> . while
    (95) ciclo -> . dowhile
    (96) ciclo -> . for
    (41) llamafunc -> . ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON
    (11) tipo -> . INTEGER
    (12) tipo -> . FLOAT
    (13) tipo -> . STRING
    (14) tipo -> . CHAR
    (15) tipo -> . BOOLEAN
    (97) while -> . WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo
    (98) dowhile -> . DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON
    (99) for -> . FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo

    RETURN          shift and go to state 35
    R_BRACE         reduce using rule 2 (e -> .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    PRINT           shift and go to state 39
    SCAN            shift and go to state 48
    INTEGER         shift and go to state 11
    FLOAT           shift and go to state 16
    STRING          shift and go to state 7
    CHAR            shift and go to state 6
    BOOLEAN         shift and go to state 17
    WHILE           shift and go to state 38
    DO              shift and go to state 34
    FOR             shift and go to state 49

    scan                           shift and go to state 36
    variables                      shift and go to state 37
    if                             shift and go to state 40
    listaestatutosprincipal        shift and go to state 64
    ciclo                          shift and go to state 42
    tipo                           shift and go to state 23
    llamafunc                      shift and go to state 43
    estatuto                       shift and go to state 44
    dowhile                        shift and go to state 47
    e                              shift and go to state 52
    for                            shift and go to state 46
    asignacion                     shift and go to state 53
    while                          shift and go to state 45
    escritura                      shift and go to state 54

state 38

    (97) while -> WHILE . while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo
    (152) while_paso1_codigo -> .

    L_PARENTHESIS   reduce using rule 152 (while_paso1_codigo -> .)

    while_paso1_codigo             shift and go to state 65

state 39

    (91) escritura -> PRINT . L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print

    L_PARENTHESIS   shift and go to state 66


state 40

    (35) estatuto -> if .

    RETURN          reduce using rule 35 (estatuto -> if .)
    ID              reduce using rule 35 (estatuto -> if .)
    IF              reduce using rule 35 (estatuto -> if .)
    PRINT           reduce using rule 35 (estatuto -> if .)
    SCAN            reduce using rule 35 (estatuto -> if .)
    INTEGER         reduce using rule 35 (estatuto -> if .)
    FLOAT           reduce using rule 35 (estatuto -> if .)
    STRING          reduce using rule 35 (estatuto -> if .)
    CHAR            reduce using rule 35 (estatuto -> if .)
    BOOLEAN         reduce using rule 35 (estatuto -> if .)
    WHILE           reduce using rule 35 (estatuto -> if .)
    DO              reduce using rule 35 (estatuto -> if .)
    FOR             reduce using rule 35 (estatuto -> if .)
    R_BRACE         reduce using rule 35 (estatuto -> if .)


state 41

    (28) bloqueprincipal -> L_BRACE listaestatutosprincipal . R_BRACE

    R_BRACE         shift and go to state 67


state 42

    (38) estatuto -> ciclo .

    RETURN          reduce using rule 38 (estatuto -> ciclo .)
    ID              reduce using rule 38 (estatuto -> ciclo .)
    IF              reduce using rule 38 (estatuto -> ciclo .)
    PRINT           reduce using rule 38 (estatuto -> ciclo .)
    SCAN            reduce using rule 38 (estatuto -> ciclo .)
    INTEGER         reduce using rule 38 (estatuto -> ciclo .)
    FLOAT           reduce using rule 38 (estatuto -> ciclo .)
    STRING          reduce using rule 38 (estatuto -> ciclo .)
    CHAR            reduce using rule 38 (estatuto -> ciclo .)
    BOOLEAN         reduce using rule 38 (estatuto -> ciclo .)
    WHILE           reduce using rule 38 (estatuto -> ciclo .)
    DO              reduce using rule 38 (estatuto -> ciclo .)
    FOR             reduce using rule 38 (estatuto -> ciclo .)
    R_BRACE         reduce using rule 38 (estatuto -> ciclo .)


state 43

    (39) estatuto -> llamafunc .

    RETURN          reduce using rule 39 (estatuto -> llamafunc .)
    ID              reduce using rule 39 (estatuto -> llamafunc .)
    IF              reduce using rule 39 (estatuto -> llamafunc .)
    PRINT           reduce using rule 39 (estatuto -> llamafunc .)
    SCAN            reduce using rule 39 (estatuto -> llamafunc .)
    INTEGER         reduce using rule 39 (estatuto -> llamafunc .)
    FLOAT           reduce using rule 39 (estatuto -> llamafunc .)
    STRING          reduce using rule 39 (estatuto -> llamafunc .)
    CHAR            reduce using rule 39 (estatuto -> llamafunc .)
    BOOLEAN         reduce using rule 39 (estatuto -> llamafunc .)
    WHILE           reduce using rule 39 (estatuto -> llamafunc .)
    DO              reduce using rule 39 (estatuto -> llamafunc .)
    FOR             reduce using rule 39 (estatuto -> llamafunc .)
    R_BRACE         reduce using rule 39 (estatuto -> llamafunc .)


state 44

    (31) listaestatutosprincipal -> estatuto . listaestatutosprincipal
    (31) listaestatutosprincipal -> . estatuto listaestatutosprincipal
    (32) listaestatutosprincipal -> . variables listaestatutosprincipal
    (33) listaestatutosprincipal -> . e
    (34) estatuto -> . asignacion SEMICOLON
    (35) estatuto -> . if
    (36) estatuto -> . escritura
    (37) estatuto -> . scan
    (38) estatuto -> . ciclo
    (39) estatuto -> . llamafunc
    (40) estatuto -> . RETURN exp seen_return SEMICOLON
    (93) variables -> . tipo seen_tipo_var listaids SEMICOLON
    (2) e -> .
    (42) asignacion -> . ID opesarr EQUALS seen_equals castono equals_pendiente
    (103) if -> . IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo
    (91) escritura -> . PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print
    (92) scan -> . SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan
    (94) ciclo -> . while
    (95) ciclo -> . dowhile
    (96) ciclo -> . for
    (41) llamafunc -> . ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON
    (11) tipo -> . INTEGER
    (12) tipo -> . FLOAT
    (13) tipo -> . STRING
    (14) tipo -> . CHAR
    (15) tipo -> . BOOLEAN
    (97) while -> . WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo
    (98) dowhile -> . DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON
    (99) for -> . FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo

    RETURN          shift and go to state 35
    R_BRACE         reduce using rule 2 (e -> .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    PRINT           shift and go to state 39
    SCAN            shift and go to state 48
    INTEGER         shift and go to state 11
    FLOAT           shift and go to state 16
    STRING          shift and go to state 7
    CHAR            shift and go to state 6
    BOOLEAN         shift and go to state 17
    WHILE           shift and go to state 38
    DO              shift and go to state 34
    FOR             shift and go to state 49

    scan                           shift and go to state 36
    variables                      shift and go to state 37
    if                             shift and go to state 40
    listaestatutosprincipal        shift and go to state 68
    ciclo                          shift and go to state 42
    tipo                           shift and go to state 23
    llamafunc                      shift and go to state 43
    estatuto                       shift and go to state 44
    dowhile                        shift and go to state 47
    e                              shift and go to state 52
    for                            shift and go to state 46
    asignacion                     shift and go to state 53
    while                          shift and go to state 45
    escritura                      shift and go to state 54

state 45

    (94) ciclo -> while .

    RETURN          reduce using rule 94 (ciclo -> while .)
    ID              reduce using rule 94 (ciclo -> while .)
    IF              reduce using rule 94 (ciclo -> while .)
    PRINT           reduce using rule 94 (ciclo -> while .)
    SCAN            reduce using rule 94 (ciclo -> while .)
    INTEGER         reduce using rule 94 (ciclo -> while .)
    FLOAT           reduce using rule 94 (ciclo -> while .)
    STRING          reduce using rule 94 (ciclo -> while .)
    CHAR            reduce using rule 94 (ciclo -> while .)
    BOOLEAN         reduce using rule 94 (ciclo -> while .)
    WHILE           reduce using rule 94 (ciclo -> while .)
    DO              reduce using rule 94 (ciclo -> while .)
    FOR             reduce using rule 94 (ciclo -> while .)
    R_BRACE         reduce using rule 94 (ciclo -> while .)


state 46

    (96) ciclo -> for .

    RETURN          reduce using rule 96 (ciclo -> for .)
    ID              reduce using rule 96 (ciclo -> for .)
    IF              reduce using rule 96 (ciclo -> for .)
    PRINT           reduce using rule 96 (ciclo -> for .)
    SCAN            reduce using rule 96 (ciclo -> for .)
    INTEGER         reduce using rule 96 (ciclo -> for .)
    FLOAT           reduce using rule 96 (ciclo -> for .)
    STRING          reduce using rule 96 (ciclo -> for .)
    CHAR            reduce using rule 96 (ciclo -> for .)
    BOOLEAN         reduce using rule 96 (ciclo -> for .)
    WHILE           reduce using rule 96 (ciclo -> for .)
    DO              reduce using rule 96 (ciclo -> for .)
    FOR             reduce using rule 96 (ciclo -> for .)
    R_BRACE         reduce using rule 96 (ciclo -> for .)


state 47

    (95) ciclo -> dowhile .

    RETURN          reduce using rule 95 (ciclo -> dowhile .)
    ID              reduce using rule 95 (ciclo -> dowhile .)
    IF              reduce using rule 95 (ciclo -> dowhile .)
    PRINT           reduce using rule 95 (ciclo -> dowhile .)
    SCAN            reduce using rule 95 (ciclo -> dowhile .)
    INTEGER         reduce using rule 95 (ciclo -> dowhile .)
    FLOAT           reduce using rule 95 (ciclo -> dowhile .)
    STRING          reduce using rule 95 (ciclo -> dowhile .)
    CHAR            reduce using rule 95 (ciclo -> dowhile .)
    BOOLEAN         reduce using rule 95 (ciclo -> dowhile .)
    WHILE           reduce using rule 95 (ciclo -> dowhile .)
    DO              reduce using rule 95 (ciclo -> dowhile .)
    FOR             reduce using rule 95 (ciclo -> dowhile .)
    R_BRACE         reduce using rule 95 (ciclo -> dowhile .)


state 48

    (92) scan -> SCAN . L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan

    L_PARENTHESIS   shift and go to state 69


state 49

    (99) for -> FOR . for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo
    (156) for_paso1_codigo -> .

    L_PARENTHESIS   reduce using rule 156 (for_paso1_codigo -> .)

    for_paso1_codigo               shift and go to state 70

state 50

    (42) asignacion -> ID . opesarr EQUALS seen_equals castono equals_pendiente
    (41) llamafunc -> ID . seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON
    (43) opesarr -> . L_BRACKET exp R_BRACKET
    (44) opesarr -> . e
    (123) seen_id_factor -> .
    (2) e -> .

    L_BRACKET       shift and go to state 73
    L_PARENTHESIS   reduce using rule 123 (seen_id_factor -> .)
    EQUALS          reduce using rule 2 (e -> .)

    e                              shift and go to state 71
    seen_id_factor                 shift and go to state 74
    opesarr                        shift and go to state 72

state 51

    (103) if -> IF . L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo

    L_PARENTHESIS   shift and go to state 75


state 52

    (33) listaestatutosprincipal -> e .

    R_BRACE         reduce using rule 33 (listaestatutosprincipal -> e .)


state 53

    (34) estatuto -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 76


state 54

    (36) estatuto -> escritura .

    RETURN          reduce using rule 36 (estatuto -> escritura .)
    ID              reduce using rule 36 (estatuto -> escritura .)
    IF              reduce using rule 36 (estatuto -> escritura .)
    PRINT           reduce using rule 36 (estatuto -> escritura .)
    SCAN            reduce using rule 36 (estatuto -> escritura .)
    INTEGER         reduce using rule 36 (estatuto -> escritura .)
    FLOAT           reduce using rule 36 (estatuto -> escritura .)
    STRING          reduce using rule 36 (estatuto -> escritura .)
    CHAR            reduce using rule 36 (estatuto -> escritura .)
    BOOLEAN         reduce using rule 36 (estatuto -> escritura .)
    WHILE           reduce using rule 36 (estatuto -> escritura .)
    DO              reduce using rule 36 (estatuto -> escritura .)
    FOR             reduce using rule 36 (estatuto -> escritura .)
    R_BRACE         reduce using rule 36 (estatuto -> escritura .)


state 55

    (7) declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS . declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc
    (21) declaraparametros -> . tipo ID opcionesdp seen_paso2_def_proc listadp
    (22) declaraparametros -> . e
    (11) tipo -> . INTEGER
    (12) tipo -> . FLOAT
    (13) tipo -> . STRING
    (14) tipo -> . CHAR
    (15) tipo -> . BOOLEAN
    (2) e -> .

    INTEGER         shift and go to state 11
    FLOAT           shift and go to state 16
    STRING          shift and go to state 7
    CHAR            shift and go to state 6
    BOOLEAN         shift and go to state 17
    R_PARENTHESIS   reduce using rule 2 (e -> .)

    e                              shift and go to state 77
    tipo                           shift and go to state 78
    declaraparametros              shift and go to state 79

state 56

    (93) variables -> tipo seen_tipo_var listaids SEMICOLON .

    RETURN          reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    ID              reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    IF              reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    PRINT           reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    SCAN            reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    INTEGER         reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    FLOAT           reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    STRING          reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    CHAR            reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    BOOLEAN         reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    WHILE           reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    DO              reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    FOR             reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    R_BRACE         reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    GLOBAL          reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    VOID            reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)
    MAIN            reduce using rule 93 (variables -> tipo seen_tipo_var listaids SEMICOLON .)


state 57

    (16) listaids -> ID seen_declara_variables . esarr masids
    (17) esarr -> . L_BRACKET INT R_BRACKET
    (18) esarr -> . e
    (2) e -> .

    L_BRACKET       shift and go to state 82
    COMA            reduce using rule 2 (e -> .)
    SEMICOLON       reduce using rule 2 (e -> .)

    esarr                          shift and go to state 81
    e                              shift and go to state 80

state 58

    (98) dowhile -> DO while_paso1_codigo . bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON
    (27) bloque -> . L_BRACE listaestatutos R_BRACE

    L_BRACE         shift and go to state 83

    bloque                         shift and go to state 84

state 59

    (74) exp -> exp_and . if_paso3_cuadruplo listaor
    (138) if_paso3_cuadruplo -> .

    OR              reduce using rule 138 (if_paso3_cuadruplo -> .)
    SEMICOLON       reduce using rule 138 (if_paso3_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 138 (if_paso3_cuadruplo -> .)
    R_BRACKET       reduce using rule 138 (if_paso3_cuadruplo -> .)
    COMA            reduce using rule 138 (if_paso3_cuadruplo -> .)

    if_paso3_cuadruplo             shift and go to state 85

state 60

    (77) exp_and -> opcnegar . exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (80) exp_bcomp -> . aritmetica esComp
    (45) aritmetica -> . term paso5_cuadruplo opexp
    (46) term -> . factor paso4_cuadruplo opterm
    (47) factor -> . ID seen_id_factor opidfactor paso1_id_cuadruplo
    (48) factor -> . INT paso1_int_cuadruplo
    (49) factor -> . FLT paso1_float_cuadruplo
    (50) factor -> . TRUE paso1_bool_cuadruplo
    (51) factor -> . FALSE paso1_bool_cuadruplo
    (52) factor -> . CHR paso1_char_cuadruplo
    (53) factor -> . STRNG paso1_string_cuadruplo
    (54) factor -> . L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo

    ID              shift and go to state 94
    INT             shift and go to state 97
    FLT             shift and go to state 86
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    CHR             shift and go to state 93
    STRNG           shift and go to state 92
    L_PARENTHESIS   shift and go to state 91

    exp_bcomp                      shift and go to state 88
    aritmetica                     shift and go to state 89
    factor                         shift and go to state 90
    term                           shift and go to state 95

state 61

    (40) estatuto -> RETURN exp . seen_return SEMICOLON
    (117) seen_return -> .

    SEMICOLON       reduce using rule 117 (seen_return -> .)

    seen_return                    shift and go to state 98

state 62

    (83) opcnegar -> NOT . if_paso5_cuadruplo
    (140) if_paso5_cuadruplo -> .

    ID              reduce using rule 140 (if_paso5_cuadruplo -> .)
    INT             reduce using rule 140 (if_paso5_cuadruplo -> .)
    FLT             reduce using rule 140 (if_paso5_cuadruplo -> .)
    TRUE            reduce using rule 140 (if_paso5_cuadruplo -> .)
    FALSE           reduce using rule 140 (if_paso5_cuadruplo -> .)
    CHR             reduce using rule 140 (if_paso5_cuadruplo -> .)
    STRNG           reduce using rule 140 (if_paso5_cuadruplo -> .)
    L_PARENTHESIS   reduce using rule 140 (if_paso5_cuadruplo -> .)

    if_paso5_cuadruplo             shift and go to state 99

state 63

    (84) opcnegar -> e .

    ID              reduce using rule 84 (opcnegar -> e .)
    INT             reduce using rule 84 (opcnegar -> e .)
    FLT             reduce using rule 84 (opcnegar -> e .)
    TRUE            reduce using rule 84 (opcnegar -> e .)
    FALSE           reduce using rule 84 (opcnegar -> e .)
    CHR             reduce using rule 84 (opcnegar -> e .)
    STRNG           reduce using rule 84 (opcnegar -> e .)
    L_PARENTHESIS   reduce using rule 84 (opcnegar -> e .)


state 64

    (32) listaestatutosprincipal -> variables listaestatutosprincipal .

    R_BRACE         reduce using rule 32 (listaestatutosprincipal -> variables listaestatutosprincipal .)


state 65

    (97) while -> WHILE while_paso1_codigo . L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo

    L_PARENTHESIS   shift and go to state 100


state 66

    (91) escritura -> PRINT L_PARENTHESIS . exp R_PARENTHESIS SEMICOLON seen_print
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 101
    e                              shift and go to state 63

state 67

    (28) bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .

    $end            reduce using rule 28 (bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .)
    GLOBAL          reduce using rule 28 (bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .)
    VOID            reduce using rule 28 (bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .)
    INTEGER         reduce using rule 28 (bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .)
    FLOAT           reduce using rule 28 (bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .)
    STRING          reduce using rule 28 (bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .)
    CHAR            reduce using rule 28 (bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .)
    BOOLEAN         reduce using rule 28 (bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .)
    MAIN            reduce using rule 28 (bloqueprincipal -> L_BRACE listaestatutosprincipal R_BRACE .)


state 68

    (31) listaestatutosprincipal -> estatuto listaestatutosprincipal .

    R_BRACE         reduce using rule 31 (listaestatutosprincipal -> estatuto listaestatutosprincipal .)


state 69

    (92) scan -> SCAN L_PARENTHESIS . ID R_PARENTHESIS SEMICOLON seen_scan

    ID              shift and go to state 102


state 70

    (99) for -> FOR for_paso1_codigo . L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo

    L_PARENTHESIS   shift and go to state 103


state 71

    (44) opesarr -> e .

    EQUALS          reduce using rule 44 (opesarr -> e .)


state 72

    (42) asignacion -> ID opesarr . EQUALS seen_equals castono equals_pendiente

    EQUALS          shift and go to state 104


state 73

    (43) opesarr -> L_BRACKET . exp R_BRACKET
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 105
    e                              shift and go to state 63

state 74

    (41) llamafunc -> ID seen_id_factor . seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON
    (118) seen_llamada_func -> .

    L_PARENTHESIS   reduce using rule 118 (seen_llamada_func -> .)

    seen_llamada_func              shift and go to state 106

state 75

    (103) if -> IF L_PARENTHESIS . exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 107
    e                              shift and go to state 63

state 76

    (34) estatuto -> asignacion SEMICOLON .

    RETURN          reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    ID              reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    IF              reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    PRINT           reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    SCAN            reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    INTEGER         reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    FLOAT           reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    STRING          reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    CHAR            reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    BOOLEAN         reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    WHILE           reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    DO              reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    FOR             reduce using rule 34 (estatuto -> asignacion SEMICOLON .)
    R_BRACE         reduce using rule 34 (estatuto -> asignacion SEMICOLON .)


state 77

    (22) declaraparametros -> e .

    R_PARENTHESIS   reduce using rule 22 (declaraparametros -> e .)


state 78

    (21) declaraparametros -> tipo . ID opcionesdp seen_paso2_def_proc listadp

    ID              shift and go to state 108


state 79

    (7) declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros . R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc

    R_PARENTHESIS   shift and go to state 109


state 80

    (18) esarr -> e .

    COMA            reduce using rule 18 (esarr -> e .)
    SEMICOLON       reduce using rule 18 (esarr -> e .)


state 81

    (16) listaids -> ID seen_declara_variables esarr . masids
    (19) masids -> . COMA listaids
    (20) masids -> . e
    (2) e -> .

    COMA            shift and go to state 111
    SEMICOLON       reduce using rule 2 (e -> .)

    masids                         shift and go to state 112
    e                              shift and go to state 110

state 82

    (17) esarr -> L_BRACKET . INT R_BRACKET

    INT             shift and go to state 113


state 83

    (27) bloque -> L_BRACE . listaestatutos R_BRACE
    (29) listaestatutos -> . estatuto listaestatutos
    (30) listaestatutos -> . e
    (34) estatuto -> . asignacion SEMICOLON
    (35) estatuto -> . if
    (36) estatuto -> . escritura
    (37) estatuto -> . scan
    (38) estatuto -> . ciclo
    (39) estatuto -> . llamafunc
    (40) estatuto -> . RETURN exp seen_return SEMICOLON
    (2) e -> .
    (42) asignacion -> . ID opesarr EQUALS seen_equals castono equals_pendiente
    (103) if -> . IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo
    (91) escritura -> . PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print
    (92) scan -> . SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan
    (94) ciclo -> . while
    (95) ciclo -> . dowhile
    (96) ciclo -> . for
    (41) llamafunc -> . ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON
    (97) while -> . WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo
    (98) dowhile -> . DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON
    (99) for -> . FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo

    RETURN          shift and go to state 35
    R_BRACE         reduce using rule 2 (e -> .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    PRINT           shift and go to state 39
    SCAN            shift and go to state 48
    WHILE           shift and go to state 38
    DO              shift and go to state 34
    FOR             shift and go to state 49

    scan                           shift and go to state 36
    if                             shift and go to state 40
    ciclo                          shift and go to state 42
    for                            shift and go to state 46
    llamafunc                      shift and go to state 43
    estatuto                       shift and go to state 114
    dowhile                        shift and go to state 47
    e                              shift and go to state 115
    asignacion                     shift and go to state 53
    while                          shift and go to state 45
    listaestatutos                 shift and go to state 116
    escritura                      shift and go to state 54

state 84

    (98) dowhile -> DO while_paso1_codigo bloque . WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON

    WHILE           shift and go to state 117


state 85

    (74) exp -> exp_and if_paso3_cuadruplo . listaor
    (75) listaor -> . OR if_paso1_cuadruplo exp
    (76) listaor -> . e
    (2) e -> .

    OR              shift and go to state 119
    SEMICOLON       reduce using rule 2 (e -> .)
    R_PARENTHESIS   reduce using rule 2 (e -> .)
    R_BRACKET       reduce using rule 2 (e -> .)
    COMA            reduce using rule 2 (e -> .)

    listaor                        shift and go to state 118
    e                              shift and go to state 120

state 86

    (49) factor -> FLT . paso1_float_cuadruplo
    (127) paso1_float_cuadruplo -> .

    MULTIPLY        reduce using rule 127 (paso1_float_cuadruplo -> .)
    DIVIDE          reduce using rule 127 (paso1_float_cuadruplo -> .)
    PLUS            reduce using rule 127 (paso1_float_cuadruplo -> .)
    MINUS           reduce using rule 127 (paso1_float_cuadruplo -> .)
    L_THAN          reduce using rule 127 (paso1_float_cuadruplo -> .)
    G_THAN          reduce using rule 127 (paso1_float_cuadruplo -> .)
    EQUALS_C        reduce using rule 127 (paso1_float_cuadruplo -> .)
    DIFFERENT       reduce using rule 127 (paso1_float_cuadruplo -> .)
    LE_THAN         reduce using rule 127 (paso1_float_cuadruplo -> .)
    GE_THAN         reduce using rule 127 (paso1_float_cuadruplo -> .)
    AND             reduce using rule 127 (paso1_float_cuadruplo -> .)
    OR              reduce using rule 127 (paso1_float_cuadruplo -> .)
    SEMICOLON       reduce using rule 127 (paso1_float_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 127 (paso1_float_cuadruplo -> .)
    R_BRACKET       reduce using rule 127 (paso1_float_cuadruplo -> .)
    COMA            reduce using rule 127 (paso1_float_cuadruplo -> .)

    paso1_float_cuadruplo          shift and go to state 121

state 87

    (50) factor -> TRUE . paso1_bool_cuadruplo
    (130) paso1_bool_cuadruplo -> .

    MULTIPLY        reduce using rule 130 (paso1_bool_cuadruplo -> .)
    DIVIDE          reduce using rule 130 (paso1_bool_cuadruplo -> .)
    PLUS            reduce using rule 130 (paso1_bool_cuadruplo -> .)
    MINUS           reduce using rule 130 (paso1_bool_cuadruplo -> .)
    L_THAN          reduce using rule 130 (paso1_bool_cuadruplo -> .)
    G_THAN          reduce using rule 130 (paso1_bool_cuadruplo -> .)
    EQUALS_C        reduce using rule 130 (paso1_bool_cuadruplo -> .)
    DIFFERENT       reduce using rule 130 (paso1_bool_cuadruplo -> .)
    LE_THAN         reduce using rule 130 (paso1_bool_cuadruplo -> .)
    GE_THAN         reduce using rule 130 (paso1_bool_cuadruplo -> .)
    AND             reduce using rule 130 (paso1_bool_cuadruplo -> .)
    OR              reduce using rule 130 (paso1_bool_cuadruplo -> .)
    SEMICOLON       reduce using rule 130 (paso1_bool_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 130 (paso1_bool_cuadruplo -> .)
    R_BRACKET       reduce using rule 130 (paso1_bool_cuadruplo -> .)
    COMA            reduce using rule 130 (paso1_bool_cuadruplo -> .)

    paso1_bool_cuadruplo           shift and go to state 122

state 88

    (77) exp_and -> opcnegar exp_bcomp . if_paso8_cuadruplo if_paso4_cuadruplo listand
    (143) if_paso8_cuadruplo -> .

    AND             reduce using rule 143 (if_paso8_cuadruplo -> .)
    OR              reduce using rule 143 (if_paso8_cuadruplo -> .)
    SEMICOLON       reduce using rule 143 (if_paso8_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 143 (if_paso8_cuadruplo -> .)
    R_BRACKET       reduce using rule 143 (if_paso8_cuadruplo -> .)
    COMA            reduce using rule 143 (if_paso8_cuadruplo -> .)

    if_paso8_cuadruplo             shift and go to state 123

state 89

    (80) exp_bcomp -> aritmetica . esComp
    (81) esComp -> . bexpop if_paso6_cuadruplo aritmetica if_paso7_cuadruplo
    (82) esComp -> . e
    (85) bexpop -> . L_THAN
    (86) bexpop -> . G_THAN
    (87) bexpop -> . EQUALS_C
    (88) bexpop -> . DIFFERENT
    (89) bexpop -> . LE_THAN
    (90) bexpop -> . GE_THAN
    (2) e -> .

    L_THAN          shift and go to state 130
    G_THAN          shift and go to state 124
    EQUALS_C        shift and go to state 129
    DIFFERENT       shift and go to state 125
    LE_THAN         shift and go to state 128
    GE_THAN         shift and go to state 127
    AND             reduce using rule 2 (e -> .)
    OR              reduce using rule 2 (e -> .)
    SEMICOLON       reduce using rule 2 (e -> .)
    R_PARENTHESIS   reduce using rule 2 (e -> .)
    R_BRACKET       reduce using rule 2 (e -> .)
    COMA            reduce using rule 2 (e -> .)

    bexpop                         shift and go to state 126
    e                              shift and go to state 131
    esComp                         shift and go to state 132

state 90

    (46) term -> factor . paso4_cuadruplo opterm
    (132) paso4_cuadruplo -> .

    MULTIPLY        reduce using rule 132 (paso4_cuadruplo -> .)
    DIVIDE          reduce using rule 132 (paso4_cuadruplo -> .)
    PLUS            reduce using rule 132 (paso4_cuadruplo -> .)
    MINUS           reduce using rule 132 (paso4_cuadruplo -> .)
    L_THAN          reduce using rule 132 (paso4_cuadruplo -> .)
    G_THAN          reduce using rule 132 (paso4_cuadruplo -> .)
    EQUALS_C        reduce using rule 132 (paso4_cuadruplo -> .)
    DIFFERENT       reduce using rule 132 (paso4_cuadruplo -> .)
    LE_THAN         reduce using rule 132 (paso4_cuadruplo -> .)
    GE_THAN         reduce using rule 132 (paso4_cuadruplo -> .)
    AND             reduce using rule 132 (paso4_cuadruplo -> .)
    OR              reduce using rule 132 (paso4_cuadruplo -> .)
    SEMICOLON       reduce using rule 132 (paso4_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 132 (paso4_cuadruplo -> .)
    R_BRACKET       reduce using rule 132 (paso4_cuadruplo -> .)
    COMA            reduce using rule 132 (paso4_cuadruplo -> .)

    paso4_cuadruplo                shift and go to state 133

state 91

    (54) factor -> L_PARENTHESIS . paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo
    (134) paso6_cuadruplo -> .

    NOT             reduce using rule 134 (paso6_cuadruplo -> .)
    ID              reduce using rule 134 (paso6_cuadruplo -> .)
    INT             reduce using rule 134 (paso6_cuadruplo -> .)
    FLT             reduce using rule 134 (paso6_cuadruplo -> .)
    TRUE            reduce using rule 134 (paso6_cuadruplo -> .)
    FALSE           reduce using rule 134 (paso6_cuadruplo -> .)
    CHR             reduce using rule 134 (paso6_cuadruplo -> .)
    STRNG           reduce using rule 134 (paso6_cuadruplo -> .)
    L_PARENTHESIS   reduce using rule 134 (paso6_cuadruplo -> .)

    paso6_cuadruplo                shift and go to state 134

state 92

    (53) factor -> STRNG . paso1_string_cuadruplo
    (128) paso1_string_cuadruplo -> .

    MULTIPLY        reduce using rule 128 (paso1_string_cuadruplo -> .)
    DIVIDE          reduce using rule 128 (paso1_string_cuadruplo -> .)
    PLUS            reduce using rule 128 (paso1_string_cuadruplo -> .)
    MINUS           reduce using rule 128 (paso1_string_cuadruplo -> .)
    L_THAN          reduce using rule 128 (paso1_string_cuadruplo -> .)
    G_THAN          reduce using rule 128 (paso1_string_cuadruplo -> .)
    EQUALS_C        reduce using rule 128 (paso1_string_cuadruplo -> .)
    DIFFERENT       reduce using rule 128 (paso1_string_cuadruplo -> .)
    LE_THAN         reduce using rule 128 (paso1_string_cuadruplo -> .)
    GE_THAN         reduce using rule 128 (paso1_string_cuadruplo -> .)
    AND             reduce using rule 128 (paso1_string_cuadruplo -> .)
    OR              reduce using rule 128 (paso1_string_cuadruplo -> .)
    SEMICOLON       reduce using rule 128 (paso1_string_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 128 (paso1_string_cuadruplo -> .)
    R_BRACKET       reduce using rule 128 (paso1_string_cuadruplo -> .)
    COMA            reduce using rule 128 (paso1_string_cuadruplo -> .)

    paso1_string_cuadruplo         shift and go to state 135

state 93

    (52) factor -> CHR . paso1_char_cuadruplo
    (129) paso1_char_cuadruplo -> .

    MULTIPLY        reduce using rule 129 (paso1_char_cuadruplo -> .)
    DIVIDE          reduce using rule 129 (paso1_char_cuadruplo -> .)
    PLUS            reduce using rule 129 (paso1_char_cuadruplo -> .)
    MINUS           reduce using rule 129 (paso1_char_cuadruplo -> .)
    L_THAN          reduce using rule 129 (paso1_char_cuadruplo -> .)
    G_THAN          reduce using rule 129 (paso1_char_cuadruplo -> .)
    EQUALS_C        reduce using rule 129 (paso1_char_cuadruplo -> .)
    DIFFERENT       reduce using rule 129 (paso1_char_cuadruplo -> .)
    LE_THAN         reduce using rule 129 (paso1_char_cuadruplo -> .)
    GE_THAN         reduce using rule 129 (paso1_char_cuadruplo -> .)
    AND             reduce using rule 129 (paso1_char_cuadruplo -> .)
    OR              reduce using rule 129 (paso1_char_cuadruplo -> .)
    SEMICOLON       reduce using rule 129 (paso1_char_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 129 (paso1_char_cuadruplo -> .)
    R_BRACKET       reduce using rule 129 (paso1_char_cuadruplo -> .)
    COMA            reduce using rule 129 (paso1_char_cuadruplo -> .)

    paso1_char_cuadruplo           shift and go to state 136

state 94

    (47) factor -> ID . seen_id_factor opidfactor paso1_id_cuadruplo
    (123) seen_id_factor -> .

    L_PARENTHESIS   reduce using rule 123 (seen_id_factor -> .)
    L_BRACKET       reduce using rule 123 (seen_id_factor -> .)
    MULTIPLY        reduce using rule 123 (seen_id_factor -> .)
    DIVIDE          reduce using rule 123 (seen_id_factor -> .)
    PLUS            reduce using rule 123 (seen_id_factor -> .)
    MINUS           reduce using rule 123 (seen_id_factor -> .)
    L_THAN          reduce using rule 123 (seen_id_factor -> .)
    G_THAN          reduce using rule 123 (seen_id_factor -> .)
    EQUALS_C        reduce using rule 123 (seen_id_factor -> .)
    DIFFERENT       reduce using rule 123 (seen_id_factor -> .)
    LE_THAN         reduce using rule 123 (seen_id_factor -> .)
    GE_THAN         reduce using rule 123 (seen_id_factor -> .)
    AND             reduce using rule 123 (seen_id_factor -> .)
    OR              reduce using rule 123 (seen_id_factor -> .)
    SEMICOLON       reduce using rule 123 (seen_id_factor -> .)
    R_PARENTHESIS   reduce using rule 123 (seen_id_factor -> .)
    R_BRACKET       reduce using rule 123 (seen_id_factor -> .)
    COMA            reduce using rule 123 (seen_id_factor -> .)

    seen_id_factor                 shift and go to state 137

state 95

    (45) aritmetica -> term . paso5_cuadruplo opexp
    (133) paso5_cuadruplo -> .

    PLUS            reduce using rule 133 (paso5_cuadruplo -> .)
    MINUS           reduce using rule 133 (paso5_cuadruplo -> .)
    L_THAN          reduce using rule 133 (paso5_cuadruplo -> .)
    G_THAN          reduce using rule 133 (paso5_cuadruplo -> .)
    EQUALS_C        reduce using rule 133 (paso5_cuadruplo -> .)
    DIFFERENT       reduce using rule 133 (paso5_cuadruplo -> .)
    LE_THAN         reduce using rule 133 (paso5_cuadruplo -> .)
    GE_THAN         reduce using rule 133 (paso5_cuadruplo -> .)
    AND             reduce using rule 133 (paso5_cuadruplo -> .)
    OR              reduce using rule 133 (paso5_cuadruplo -> .)
    SEMICOLON       reduce using rule 133 (paso5_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 133 (paso5_cuadruplo -> .)
    R_BRACKET       reduce using rule 133 (paso5_cuadruplo -> .)
    COMA            reduce using rule 133 (paso5_cuadruplo -> .)

    paso5_cuadruplo                shift and go to state 138

state 96

    (51) factor -> FALSE . paso1_bool_cuadruplo
    (130) paso1_bool_cuadruplo -> .

    MULTIPLY        reduce using rule 130 (paso1_bool_cuadruplo -> .)
    DIVIDE          reduce using rule 130 (paso1_bool_cuadruplo -> .)
    PLUS            reduce using rule 130 (paso1_bool_cuadruplo -> .)
    MINUS           reduce using rule 130 (paso1_bool_cuadruplo -> .)
    L_THAN          reduce using rule 130 (paso1_bool_cuadruplo -> .)
    G_THAN          reduce using rule 130 (paso1_bool_cuadruplo -> .)
    EQUALS_C        reduce using rule 130 (paso1_bool_cuadruplo -> .)
    DIFFERENT       reduce using rule 130 (paso1_bool_cuadruplo -> .)
    LE_THAN         reduce using rule 130 (paso1_bool_cuadruplo -> .)
    GE_THAN         reduce using rule 130 (paso1_bool_cuadruplo -> .)
    AND             reduce using rule 130 (paso1_bool_cuadruplo -> .)
    OR              reduce using rule 130 (paso1_bool_cuadruplo -> .)
    SEMICOLON       reduce using rule 130 (paso1_bool_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 130 (paso1_bool_cuadruplo -> .)
    R_BRACKET       reduce using rule 130 (paso1_bool_cuadruplo -> .)
    COMA            reduce using rule 130 (paso1_bool_cuadruplo -> .)

    paso1_bool_cuadruplo           shift and go to state 139

state 97

    (48) factor -> INT . paso1_int_cuadruplo
    (126) paso1_int_cuadruplo -> .

    MULTIPLY        reduce using rule 126 (paso1_int_cuadruplo -> .)
    DIVIDE          reduce using rule 126 (paso1_int_cuadruplo -> .)
    PLUS            reduce using rule 126 (paso1_int_cuadruplo -> .)
    MINUS           reduce using rule 126 (paso1_int_cuadruplo -> .)
    L_THAN          reduce using rule 126 (paso1_int_cuadruplo -> .)
    G_THAN          reduce using rule 126 (paso1_int_cuadruplo -> .)
    EQUALS_C        reduce using rule 126 (paso1_int_cuadruplo -> .)
    DIFFERENT       reduce using rule 126 (paso1_int_cuadruplo -> .)
    LE_THAN         reduce using rule 126 (paso1_int_cuadruplo -> .)
    GE_THAN         reduce using rule 126 (paso1_int_cuadruplo -> .)
    AND             reduce using rule 126 (paso1_int_cuadruplo -> .)
    OR              reduce using rule 126 (paso1_int_cuadruplo -> .)
    SEMICOLON       reduce using rule 126 (paso1_int_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 126 (paso1_int_cuadruplo -> .)
    R_BRACKET       reduce using rule 126 (paso1_int_cuadruplo -> .)
    COMA            reduce using rule 126 (paso1_int_cuadruplo -> .)

    paso1_int_cuadruplo            shift and go to state 140

state 98

    (40) estatuto -> RETURN exp seen_return . SEMICOLON

    SEMICOLON       shift and go to state 141


state 99

    (83) opcnegar -> NOT if_paso5_cuadruplo .

    ID              reduce using rule 83 (opcnegar -> NOT if_paso5_cuadruplo .)
    INT             reduce using rule 83 (opcnegar -> NOT if_paso5_cuadruplo .)
    FLT             reduce using rule 83 (opcnegar -> NOT if_paso5_cuadruplo .)
    TRUE            reduce using rule 83 (opcnegar -> NOT if_paso5_cuadruplo .)
    FALSE           reduce using rule 83 (opcnegar -> NOT if_paso5_cuadruplo .)
    CHR             reduce using rule 83 (opcnegar -> NOT if_paso5_cuadruplo .)
    STRNG           reduce using rule 83 (opcnegar -> NOT if_paso5_cuadruplo .)
    L_PARENTHESIS   reduce using rule 83 (opcnegar -> NOT if_paso5_cuadruplo .)


state 100

    (97) while -> WHILE while_paso1_codigo L_PARENTHESIS . exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 142
    e                              shift and go to state 63

state 101

    (91) escritura -> PRINT L_PARENTHESIS exp . R_PARENTHESIS SEMICOLON seen_print

    R_PARENTHESIS   shift and go to state 143


state 102

    (92) scan -> SCAN L_PARENTHESIS ID . R_PARENTHESIS SEMICOLON seen_scan

    R_PARENTHESIS   shift and go to state 144


state 103

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS . exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    exp                            shift and go to state 145
    opcnegar                       shift and go to state 60
    e                              shift and go to state 63

state 104

    (42) asignacion -> ID opesarr EQUALS . seen_equals castono equals_pendiente
    (144) seen_equals -> .

    STRING          reduce using rule 144 (seen_equals -> .)
    CHAR            reduce using rule 144 (seen_equals -> .)
    INTEGER         reduce using rule 144 (seen_equals -> .)
    FLOAT           reduce using rule 144 (seen_equals -> .)
    NOT             reduce using rule 144 (seen_equals -> .)
    ID              reduce using rule 144 (seen_equals -> .)
    INT             reduce using rule 144 (seen_equals -> .)
    FLT             reduce using rule 144 (seen_equals -> .)
    TRUE            reduce using rule 144 (seen_equals -> .)
    FALSE           reduce using rule 144 (seen_equals -> .)
    CHR             reduce using rule 144 (seen_equals -> .)
    STRNG           reduce using rule 144 (seen_equals -> .)
    L_PARENTHESIS   reduce using rule 144 (seen_equals -> .)

    seen_equals                    shift and go to state 146

state 105

    (43) opesarr -> L_BRACKET exp . R_BRACKET

    R_BRACKET       shift and go to state 147


state 106

    (41) llamafunc -> ID seen_id_factor seen_llamada_func . L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON

    L_PARENTHESIS   shift and go to state 148


state 107

    (103) if -> IF L_PARENTHESIS exp . if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo
    (148) if_paso1_codigo -> .

    R_PARENTHESIS   reduce using rule 148 (if_paso1_codigo -> .)

    if_paso1_codigo                shift and go to state 149

state 108

    (21) declaraparametros -> tipo ID . opcionesdp seen_paso2_def_proc listadp
    (23) opcionesdp -> . L_BRACKET R_BRACKET
    (24) opcionesdp -> . e
    (2) e -> .

    L_BRACKET       shift and go to state 152
    COMA            reduce using rule 2 (e -> .)
    R_PARENTHESIS   reduce using rule 2 (e -> .)

    opcionesdp                     shift and go to state 151
    e                              shift and go to state 150

state 109

    (7) declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS . seen_dir_inicio bloqueprincipal endproc
    (124) seen_dir_inicio -> .

    L_BRACE         reduce using rule 124 (seen_dir_inicio -> .)

    seen_dir_inicio                shift and go to state 153

state 110

    (20) masids -> e .

    SEMICOLON       reduce using rule 20 (masids -> e .)


state 111

    (19) masids -> COMA . listaids
    (16) listaids -> . ID seen_declara_variables esarr masids

    ID              shift and go to state 32

    listaids                       shift and go to state 154

state 112

    (16) listaids -> ID seen_declara_variables esarr masids .

    SEMICOLON       reduce using rule 16 (listaids -> ID seen_declara_variables esarr masids .)


state 113

    (17) esarr -> L_BRACKET INT . R_BRACKET

    R_BRACKET       shift and go to state 155


state 114

    (29) listaestatutos -> estatuto . listaestatutos
    (29) listaestatutos -> . estatuto listaestatutos
    (30) listaestatutos -> . e
    (34) estatuto -> . asignacion SEMICOLON
    (35) estatuto -> . if
    (36) estatuto -> . escritura
    (37) estatuto -> . scan
    (38) estatuto -> . ciclo
    (39) estatuto -> . llamafunc
    (40) estatuto -> . RETURN exp seen_return SEMICOLON
    (2) e -> .
    (42) asignacion -> . ID opesarr EQUALS seen_equals castono equals_pendiente
    (103) if -> . IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo
    (91) escritura -> . PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print
    (92) scan -> . SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan
    (94) ciclo -> . while
    (95) ciclo -> . dowhile
    (96) ciclo -> . for
    (41) llamafunc -> . ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON
    (97) while -> . WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo
    (98) dowhile -> . DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON
    (99) for -> . FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo

    RETURN          shift and go to state 35
    R_BRACE         reduce using rule 2 (e -> .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    PRINT           shift and go to state 39
    SCAN            shift and go to state 48
    WHILE           shift and go to state 38
    DO              shift and go to state 34
    FOR             shift and go to state 49

    scan                           shift and go to state 36
    if                             shift and go to state 40
    ciclo                          shift and go to state 42
    for                            shift and go to state 46
    llamafunc                      shift and go to state 43
    estatuto                       shift and go to state 114
    dowhile                        shift and go to state 47
    e                              shift and go to state 115
    asignacion                     shift and go to state 53
    while                          shift and go to state 45
    listaestatutos                 shift and go to state 156
    escritura                      shift and go to state 54

state 115

    (30) listaestatutos -> e .

    R_BRACE         reduce using rule 30 (listaestatutos -> e .)


state 116

    (27) bloque -> L_BRACE listaestatutos . R_BRACE

    R_BRACE         shift and go to state 157


state 117

    (98) dowhile -> DO while_paso1_codigo bloque WHILE . L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON

    L_PARENTHESIS   shift and go to state 158


state 118

    (74) exp -> exp_and if_paso3_cuadruplo listaor .

    R_BRACKET       reduce using rule 74 (exp -> exp_and if_paso3_cuadruplo listaor .)
    SEMICOLON       reduce using rule 74 (exp -> exp_and if_paso3_cuadruplo listaor .)
    R_PARENTHESIS   reduce using rule 74 (exp -> exp_and if_paso3_cuadruplo listaor .)
    COMA            reduce using rule 74 (exp -> exp_and if_paso3_cuadruplo listaor .)


state 119

    (75) listaor -> OR . if_paso1_cuadruplo exp
    (136) if_paso1_cuadruplo -> .

    NOT             reduce using rule 136 (if_paso1_cuadruplo -> .)
    ID              reduce using rule 136 (if_paso1_cuadruplo -> .)
    INT             reduce using rule 136 (if_paso1_cuadruplo -> .)
    FLT             reduce using rule 136 (if_paso1_cuadruplo -> .)
    TRUE            reduce using rule 136 (if_paso1_cuadruplo -> .)
    FALSE           reduce using rule 136 (if_paso1_cuadruplo -> .)
    CHR             reduce using rule 136 (if_paso1_cuadruplo -> .)
    STRNG           reduce using rule 136 (if_paso1_cuadruplo -> .)
    L_PARENTHESIS   reduce using rule 136 (if_paso1_cuadruplo -> .)

    if_paso1_cuadruplo             shift and go to state 159

state 120

    (76) listaor -> e .

    SEMICOLON       reduce using rule 76 (listaor -> e .)
    R_PARENTHESIS   reduce using rule 76 (listaor -> e .)
    R_BRACKET       reduce using rule 76 (listaor -> e .)
    COMA            reduce using rule 76 (listaor -> e .)


state 121

    (49) factor -> FLT paso1_float_cuadruplo .

    MULTIPLY        reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    DIVIDE          reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    PLUS            reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    MINUS           reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    L_THAN          reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    G_THAN          reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    EQUALS_C        reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    DIFFERENT       reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    LE_THAN         reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    GE_THAN         reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    AND             reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    OR              reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    SEMICOLON       reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    R_PARENTHESIS   reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    R_BRACKET       reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)
    COMA            reduce using rule 49 (factor -> FLT paso1_float_cuadruplo .)


state 122

    (50) factor -> TRUE paso1_bool_cuadruplo .

    MULTIPLY        reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    DIVIDE          reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    PLUS            reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    MINUS           reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    L_THAN          reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    G_THAN          reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    EQUALS_C        reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    DIFFERENT       reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    LE_THAN         reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    GE_THAN         reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    AND             reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    OR              reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    SEMICOLON       reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    R_PARENTHESIS   reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    R_BRACKET       reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)
    COMA            reduce using rule 50 (factor -> TRUE paso1_bool_cuadruplo .)


state 123

    (77) exp_and -> opcnegar exp_bcomp if_paso8_cuadruplo . if_paso4_cuadruplo listand
    (139) if_paso4_cuadruplo -> .

    AND             reduce using rule 139 (if_paso4_cuadruplo -> .)
    OR              reduce using rule 139 (if_paso4_cuadruplo -> .)
    SEMICOLON       reduce using rule 139 (if_paso4_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 139 (if_paso4_cuadruplo -> .)
    R_BRACKET       reduce using rule 139 (if_paso4_cuadruplo -> .)
    COMA            reduce using rule 139 (if_paso4_cuadruplo -> .)

    if_paso4_cuadruplo             shift and go to state 160

state 124

    (86) bexpop -> G_THAN .

    ID              reduce using rule 86 (bexpop -> G_THAN .)
    INT             reduce using rule 86 (bexpop -> G_THAN .)
    FLT             reduce using rule 86 (bexpop -> G_THAN .)
    TRUE            reduce using rule 86 (bexpop -> G_THAN .)
    FALSE           reduce using rule 86 (bexpop -> G_THAN .)
    CHR             reduce using rule 86 (bexpop -> G_THAN .)
    STRNG           reduce using rule 86 (bexpop -> G_THAN .)
    L_PARENTHESIS   reduce using rule 86 (bexpop -> G_THAN .)


state 125

    (88) bexpop -> DIFFERENT .

    ID              reduce using rule 88 (bexpop -> DIFFERENT .)
    INT             reduce using rule 88 (bexpop -> DIFFERENT .)
    FLT             reduce using rule 88 (bexpop -> DIFFERENT .)
    TRUE            reduce using rule 88 (bexpop -> DIFFERENT .)
    FALSE           reduce using rule 88 (bexpop -> DIFFERENT .)
    CHR             reduce using rule 88 (bexpop -> DIFFERENT .)
    STRNG           reduce using rule 88 (bexpop -> DIFFERENT .)
    L_PARENTHESIS   reduce using rule 88 (bexpop -> DIFFERENT .)


state 126

    (81) esComp -> bexpop . if_paso6_cuadruplo aritmetica if_paso7_cuadruplo
    (141) if_paso6_cuadruplo -> .

    ID              reduce using rule 141 (if_paso6_cuadruplo -> .)
    INT             reduce using rule 141 (if_paso6_cuadruplo -> .)
    FLT             reduce using rule 141 (if_paso6_cuadruplo -> .)
    TRUE            reduce using rule 141 (if_paso6_cuadruplo -> .)
    FALSE           reduce using rule 141 (if_paso6_cuadruplo -> .)
    CHR             reduce using rule 141 (if_paso6_cuadruplo -> .)
    STRNG           reduce using rule 141 (if_paso6_cuadruplo -> .)
    L_PARENTHESIS   reduce using rule 141 (if_paso6_cuadruplo -> .)

    if_paso6_cuadruplo             shift and go to state 161

state 127

    (90) bexpop -> GE_THAN .

    ID              reduce using rule 90 (bexpop -> GE_THAN .)
    INT             reduce using rule 90 (bexpop -> GE_THAN .)
    FLT             reduce using rule 90 (bexpop -> GE_THAN .)
    TRUE            reduce using rule 90 (bexpop -> GE_THAN .)
    FALSE           reduce using rule 90 (bexpop -> GE_THAN .)
    CHR             reduce using rule 90 (bexpop -> GE_THAN .)
    STRNG           reduce using rule 90 (bexpop -> GE_THAN .)
    L_PARENTHESIS   reduce using rule 90 (bexpop -> GE_THAN .)


state 128

    (89) bexpop -> LE_THAN .

    ID              reduce using rule 89 (bexpop -> LE_THAN .)
    INT             reduce using rule 89 (bexpop -> LE_THAN .)
    FLT             reduce using rule 89 (bexpop -> LE_THAN .)
    TRUE            reduce using rule 89 (bexpop -> LE_THAN .)
    FALSE           reduce using rule 89 (bexpop -> LE_THAN .)
    CHR             reduce using rule 89 (bexpop -> LE_THAN .)
    STRNG           reduce using rule 89 (bexpop -> LE_THAN .)
    L_PARENTHESIS   reduce using rule 89 (bexpop -> LE_THAN .)


state 129

    (87) bexpop -> EQUALS_C .

    ID              reduce using rule 87 (bexpop -> EQUALS_C .)
    INT             reduce using rule 87 (bexpop -> EQUALS_C .)
    FLT             reduce using rule 87 (bexpop -> EQUALS_C .)
    TRUE            reduce using rule 87 (bexpop -> EQUALS_C .)
    FALSE           reduce using rule 87 (bexpop -> EQUALS_C .)
    CHR             reduce using rule 87 (bexpop -> EQUALS_C .)
    STRNG           reduce using rule 87 (bexpop -> EQUALS_C .)
    L_PARENTHESIS   reduce using rule 87 (bexpop -> EQUALS_C .)


state 130

    (85) bexpop -> L_THAN .

    ID              reduce using rule 85 (bexpop -> L_THAN .)
    INT             reduce using rule 85 (bexpop -> L_THAN .)
    FLT             reduce using rule 85 (bexpop -> L_THAN .)
    TRUE            reduce using rule 85 (bexpop -> L_THAN .)
    FALSE           reduce using rule 85 (bexpop -> L_THAN .)
    CHR             reduce using rule 85 (bexpop -> L_THAN .)
    STRNG           reduce using rule 85 (bexpop -> L_THAN .)
    L_PARENTHESIS   reduce using rule 85 (bexpop -> L_THAN .)


state 131

    (82) esComp -> e .

    AND             reduce using rule 82 (esComp -> e .)
    OR              reduce using rule 82 (esComp -> e .)
    SEMICOLON       reduce using rule 82 (esComp -> e .)
    R_PARENTHESIS   reduce using rule 82 (esComp -> e .)
    R_BRACKET       reduce using rule 82 (esComp -> e .)
    COMA            reduce using rule 82 (esComp -> e .)


state 132

    (80) exp_bcomp -> aritmetica esComp .

    AND             reduce using rule 80 (exp_bcomp -> aritmetica esComp .)
    OR              reduce using rule 80 (exp_bcomp -> aritmetica esComp .)
    SEMICOLON       reduce using rule 80 (exp_bcomp -> aritmetica esComp .)
    R_PARENTHESIS   reduce using rule 80 (exp_bcomp -> aritmetica esComp .)
    R_BRACKET       reduce using rule 80 (exp_bcomp -> aritmetica esComp .)
    COMA            reduce using rule 80 (exp_bcomp -> aritmetica esComp .)


state 133

    (46) term -> factor paso4_cuadruplo . opterm
    (62) opterm -> . MULTIPLY paso2y3_cuadruplos term
    (63) opterm -> . DIVIDE paso2y3_cuadruplos term
    (64) opterm -> . e
    (2) e -> .

    MULTIPLY        shift and go to state 165
    DIVIDE          shift and go to state 163
    PLUS            reduce using rule 2 (e -> .)
    MINUS           reduce using rule 2 (e -> .)
    L_THAN          reduce using rule 2 (e -> .)
    G_THAN          reduce using rule 2 (e -> .)
    EQUALS_C        reduce using rule 2 (e -> .)
    DIFFERENT       reduce using rule 2 (e -> .)
    LE_THAN         reduce using rule 2 (e -> .)
    GE_THAN         reduce using rule 2 (e -> .)
    AND             reduce using rule 2 (e -> .)
    OR              reduce using rule 2 (e -> .)
    SEMICOLON       reduce using rule 2 (e -> .)
    R_PARENTHESIS   reduce using rule 2 (e -> .)
    R_BRACKET       reduce using rule 2 (e -> .)
    COMA            reduce using rule 2 (e -> .)

    e                              shift and go to state 162
    opterm                         shift and go to state 164

state 134

    (54) factor -> L_PARENTHESIS paso6_cuadruplo . exp R_PARENTHESIS paso7_cuadruplo
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    opcnegar                       shift and go to state 60
    exp_and                        shift and go to state 59
    exp                            shift and go to state 166
    e                              shift and go to state 63

state 135

    (53) factor -> STRNG paso1_string_cuadruplo .

    MULTIPLY        reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    DIVIDE          reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    PLUS            reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    MINUS           reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    L_THAN          reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    G_THAN          reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    EQUALS_C        reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    DIFFERENT       reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    LE_THAN         reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    GE_THAN         reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    AND             reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    OR              reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    SEMICOLON       reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    R_PARENTHESIS   reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    R_BRACKET       reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)
    COMA            reduce using rule 53 (factor -> STRNG paso1_string_cuadruplo .)


state 136

    (52) factor -> CHR paso1_char_cuadruplo .

    MULTIPLY        reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    DIVIDE          reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    PLUS            reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    MINUS           reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    L_THAN          reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    G_THAN          reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    EQUALS_C        reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    DIFFERENT       reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    LE_THAN         reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    GE_THAN         reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    AND             reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    OR              reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    SEMICOLON       reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    R_PARENTHESIS   reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    R_BRACKET       reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)
    COMA            reduce using rule 52 (factor -> CHR paso1_char_cuadruplo .)


state 137

    (47) factor -> ID seen_id_factor . opidfactor paso1_id_cuadruplo
    (55) opidfactor -> . L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub
    (56) opidfactor -> . L_BRACKET exp R_BRACKET
    (57) opidfactor -> . e
    (2) e -> .

    L_PARENTHESIS   shift and go to state 169
    L_BRACKET       shift and go to state 167
    MULTIPLY        reduce using rule 2 (e -> .)
    DIVIDE          reduce using rule 2 (e -> .)
    PLUS            reduce using rule 2 (e -> .)
    MINUS           reduce using rule 2 (e -> .)
    L_THAN          reduce using rule 2 (e -> .)
    G_THAN          reduce using rule 2 (e -> .)
    EQUALS_C        reduce using rule 2 (e -> .)
    DIFFERENT       reduce using rule 2 (e -> .)
    LE_THAN         reduce using rule 2 (e -> .)
    GE_THAN         reduce using rule 2 (e -> .)
    AND             reduce using rule 2 (e -> .)
    OR              reduce using rule 2 (e -> .)
    SEMICOLON       reduce using rule 2 (e -> .)
    R_PARENTHESIS   reduce using rule 2 (e -> .)
    R_BRACKET       reduce using rule 2 (e -> .)
    COMA            reduce using rule 2 (e -> .)

    opidfactor                     shift and go to state 168
    e                              shift and go to state 170

state 138

    (45) aritmetica -> term paso5_cuadruplo . opexp
    (65) opexp -> . PLUS paso2y3_cuadruplos aritmetica
    (66) opexp -> . MINUS paso2y3_cuadruplos aritmetica
    (67) opexp -> . e
    (2) e -> .

    PLUS            shift and go to state 172
    MINUS           shift and go to state 173
    L_THAN          reduce using rule 2 (e -> .)
    G_THAN          reduce using rule 2 (e -> .)
    EQUALS_C        reduce using rule 2 (e -> .)
    DIFFERENT       reduce using rule 2 (e -> .)
    LE_THAN         reduce using rule 2 (e -> .)
    GE_THAN         reduce using rule 2 (e -> .)
    AND             reduce using rule 2 (e -> .)
    OR              reduce using rule 2 (e -> .)
    SEMICOLON       reduce using rule 2 (e -> .)
    R_PARENTHESIS   reduce using rule 2 (e -> .)
    R_BRACKET       reduce using rule 2 (e -> .)
    COMA            reduce using rule 2 (e -> .)

    e                              shift and go to state 171
    opexp                          shift and go to state 174

state 139

    (51) factor -> FALSE paso1_bool_cuadruplo .

    MULTIPLY        reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    DIVIDE          reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    PLUS            reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    MINUS           reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    L_THAN          reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    G_THAN          reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    EQUALS_C        reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    DIFFERENT       reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    LE_THAN         reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    GE_THAN         reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    AND             reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    OR              reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    SEMICOLON       reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    R_PARENTHESIS   reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    R_BRACKET       reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)
    COMA            reduce using rule 51 (factor -> FALSE paso1_bool_cuadruplo .)


state 140

    (48) factor -> INT paso1_int_cuadruplo .

    MULTIPLY        reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    DIVIDE          reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    PLUS            reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    MINUS           reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    L_THAN          reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    G_THAN          reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    EQUALS_C        reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    DIFFERENT       reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    LE_THAN         reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    GE_THAN         reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    AND             reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    OR              reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    SEMICOLON       reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    R_PARENTHESIS   reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    R_BRACKET       reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)
    COMA            reduce using rule 48 (factor -> INT paso1_int_cuadruplo .)


state 141

    (40) estatuto -> RETURN exp seen_return SEMICOLON .

    RETURN          reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    ID              reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    IF              reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    PRINT           reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    SCAN            reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    INTEGER         reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    FLOAT           reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    STRING          reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    CHAR            reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    BOOLEAN         reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    WHILE           reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    DO              reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    FOR             reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)
    R_BRACE         reduce using rule 40 (estatuto -> RETURN exp seen_return SEMICOLON .)


state 142

    (97) while -> WHILE while_paso1_codigo L_PARENTHESIS exp . while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo
    (153) while_paso2_codigo -> .

    R_PARENTHESIS   reduce using rule 153 (while_paso2_codigo -> .)

    while_paso2_codigo             shift and go to state 175

state 143

    (91) escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS . SEMICOLON seen_print

    SEMICOLON       shift and go to state 176


state 144

    (92) scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS . SEMICOLON seen_scan

    SEMICOLON       shift and go to state 177


state 145

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS exp . for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo
    (157) for_paso2_codigo -> .

    SEMICOLON       reduce using rule 157 (for_paso2_codigo -> .)

    for_paso2_codigo               shift and go to state 178

state 146

    (42) asignacion -> ID opesarr EQUALS seen_equals . castono equals_pendiente
    (68) castono -> . castto L_PARENTHESIS exp R_PARENTHESIS
    (69) castono -> . exp
    (70) castto -> . STRING
    (71) castto -> . CHAR
    (72) castto -> . INTEGER
    (73) castto -> . FLOAT
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    STRING          shift and go to state 181
    CHAR            shift and go to state 179
    INTEGER         shift and go to state 180
    FLOAT           shift and go to state 184
    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    e                              shift and go to state 63
    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    castto                         shift and go to state 183
    castono                        shift and go to state 182
    exp                            shift and go to state 185

state 147

    (43) opesarr -> L_BRACKET exp R_BRACKET .

    EQUALS          reduce using rule 43 (opesarr -> L_BRACKET exp R_BRACKET .)


state 148

    (41) llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS . listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON
    (58) listargs -> . exp seen_argumento_funcion masargs
    (59) listargs -> . e
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (2) e -> .
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e

    R_PARENTHESIS   reduce using rule 2 (e -> .)
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)
    NOT             shift and go to state 62

    opcnegar                       shift and go to state 60
    e                              shift and go to state 187
    exp                            shift and go to state 188
    exp_and                        shift and go to state 59
    listargs                       shift and go to state 186

state 149

    (103) if -> IF L_PARENTHESIS exp if_paso1_codigo . R_PARENTHESIS bloque listaelif else if_paso2_codigo

    R_PARENTHESIS   shift and go to state 189


state 150

    (24) opcionesdp -> e .

    COMA            reduce using rule 24 (opcionesdp -> e .)
    R_PARENTHESIS   reduce using rule 24 (opcionesdp -> e .)


state 151

    (21) declaraparametros -> tipo ID opcionesdp . seen_paso2_def_proc listadp
    (111) seen_paso2_def_proc -> .

    COMA            reduce using rule 111 (seen_paso2_def_proc -> .)
    R_PARENTHESIS   reduce using rule 111 (seen_paso2_def_proc -> .)

    seen_paso2_def_proc            shift and go to state 190

state 152

    (23) opcionesdp -> L_BRACKET . R_BRACKET

    R_BRACKET       shift and go to state 191


state 153

    (7) declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio . bloqueprincipal endproc
    (28) bloqueprincipal -> . L_BRACE listaestatutosprincipal R_BRACE

    L_BRACE         shift and go to state 29

    bloqueprincipal                shift and go to state 192

state 154

    (19) masids -> COMA listaids .

    SEMICOLON       reduce using rule 19 (masids -> COMA listaids .)


state 155

    (17) esarr -> L_BRACKET INT R_BRACKET .

    COMA            reduce using rule 17 (esarr -> L_BRACKET INT R_BRACKET .)
    SEMICOLON       reduce using rule 17 (esarr -> L_BRACKET INT R_BRACKET .)


state 156

    (29) listaestatutos -> estatuto listaestatutos .

    R_BRACE         reduce using rule 29 (listaestatutos -> estatuto listaestatutos .)


state 157

    (27) bloque -> L_BRACE listaestatutos R_BRACE .

    RETURN          reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    ID              reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    IF              reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    PRINT           reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    SCAN            reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    INTEGER         reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    FLOAT           reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    STRING          reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    CHAR            reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    BOOLEAN         reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    WHILE           reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    DO              reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    FOR             reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    R_BRACE         reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    ELIF            reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)
    ELSE            reduce using rule 27 (bloque -> L_BRACE listaestatutos R_BRACE .)


state 158

    (98) dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS . exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 193
    e                              shift and go to state 63

state 159

    (75) listaor -> OR if_paso1_cuadruplo . exp
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 194
    e                              shift and go to state 63

state 160

    (77) exp_and -> opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo . listand
    (78) listand -> . AND if_paso2_cuadruplo exp_and
    (79) listand -> . e
    (2) e -> .

    AND             shift and go to state 195
    OR              reduce using rule 2 (e -> .)
    SEMICOLON       reduce using rule 2 (e -> .)
    R_PARENTHESIS   reduce using rule 2 (e -> .)
    R_BRACKET       reduce using rule 2 (e -> .)
    COMA            reduce using rule 2 (e -> .)

    listand                        shift and go to state 196
    e                              shift and go to state 197

state 161

    (81) esComp -> bexpop if_paso6_cuadruplo . aritmetica if_paso7_cuadruplo
    (45) aritmetica -> . term paso5_cuadruplo opexp
    (46) term -> . factor paso4_cuadruplo opterm
    (47) factor -> . ID seen_id_factor opidfactor paso1_id_cuadruplo
    (48) factor -> . INT paso1_int_cuadruplo
    (49) factor -> . FLT paso1_float_cuadruplo
    (50) factor -> . TRUE paso1_bool_cuadruplo
    (51) factor -> . FALSE paso1_bool_cuadruplo
    (52) factor -> . CHR paso1_char_cuadruplo
    (53) factor -> . STRNG paso1_string_cuadruplo
    (54) factor -> . L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo

    ID              shift and go to state 94
    INT             shift and go to state 97
    FLT             shift and go to state 86
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    CHR             shift and go to state 93
    STRNG           shift and go to state 92
    L_PARENTHESIS   shift and go to state 91

    term                           shift and go to state 95
    aritmetica                     shift and go to state 198
    factor                         shift and go to state 90

state 162

    (64) opterm -> e .

    PLUS            reduce using rule 64 (opterm -> e .)
    MINUS           reduce using rule 64 (opterm -> e .)
    L_THAN          reduce using rule 64 (opterm -> e .)
    G_THAN          reduce using rule 64 (opterm -> e .)
    EQUALS_C        reduce using rule 64 (opterm -> e .)
    DIFFERENT       reduce using rule 64 (opterm -> e .)
    LE_THAN         reduce using rule 64 (opterm -> e .)
    GE_THAN         reduce using rule 64 (opterm -> e .)
    AND             reduce using rule 64 (opterm -> e .)
    OR              reduce using rule 64 (opterm -> e .)
    SEMICOLON       reduce using rule 64 (opterm -> e .)
    R_PARENTHESIS   reduce using rule 64 (opterm -> e .)
    R_BRACKET       reduce using rule 64 (opterm -> e .)
    COMA            reduce using rule 64 (opterm -> e .)


state 163

    (63) opterm -> DIVIDE . paso2y3_cuadruplos term
    (131) paso2y3_cuadruplos -> .

    ID              reduce using rule 131 (paso2y3_cuadruplos -> .)
    INT             reduce using rule 131 (paso2y3_cuadruplos -> .)
    FLT             reduce using rule 131 (paso2y3_cuadruplos -> .)
    TRUE            reduce using rule 131 (paso2y3_cuadruplos -> .)
    FALSE           reduce using rule 131 (paso2y3_cuadruplos -> .)
    CHR             reduce using rule 131 (paso2y3_cuadruplos -> .)
    STRNG           reduce using rule 131 (paso2y3_cuadruplos -> .)
    L_PARENTHESIS   reduce using rule 131 (paso2y3_cuadruplos -> .)

    paso2y3_cuadruplos             shift and go to state 199

state 164

    (46) term -> factor paso4_cuadruplo opterm .

    PLUS            reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    MINUS           reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    L_THAN          reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    G_THAN          reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    EQUALS_C        reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    DIFFERENT       reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    LE_THAN         reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    GE_THAN         reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    AND             reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    OR              reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    SEMICOLON       reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    R_PARENTHESIS   reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    R_BRACKET       reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)
    COMA            reduce using rule 46 (term -> factor paso4_cuadruplo opterm .)


state 165

    (62) opterm -> MULTIPLY . paso2y3_cuadruplos term
    (131) paso2y3_cuadruplos -> .

    ID              reduce using rule 131 (paso2y3_cuadruplos -> .)
    INT             reduce using rule 131 (paso2y3_cuadruplos -> .)
    FLT             reduce using rule 131 (paso2y3_cuadruplos -> .)
    TRUE            reduce using rule 131 (paso2y3_cuadruplos -> .)
    FALSE           reduce using rule 131 (paso2y3_cuadruplos -> .)
    CHR             reduce using rule 131 (paso2y3_cuadruplos -> .)
    STRNG           reduce using rule 131 (paso2y3_cuadruplos -> .)
    L_PARENTHESIS   reduce using rule 131 (paso2y3_cuadruplos -> .)

    paso2y3_cuadruplos             shift and go to state 200

state 166

    (54) factor -> L_PARENTHESIS paso6_cuadruplo exp . R_PARENTHESIS paso7_cuadruplo

    R_PARENTHESIS   shift and go to state 201


state 167

    (56) opidfactor -> L_BRACKET . exp R_BRACKET
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 202
    e                              shift and go to state 63

state 168

    (47) factor -> ID seen_id_factor opidfactor . paso1_id_cuadruplo
    (125) paso1_id_cuadruplo -> .

    MULTIPLY        reduce using rule 125 (paso1_id_cuadruplo -> .)
    DIVIDE          reduce using rule 125 (paso1_id_cuadruplo -> .)
    PLUS            reduce using rule 125 (paso1_id_cuadruplo -> .)
    MINUS           reduce using rule 125 (paso1_id_cuadruplo -> .)
    L_THAN          reduce using rule 125 (paso1_id_cuadruplo -> .)
    G_THAN          reduce using rule 125 (paso1_id_cuadruplo -> .)
    EQUALS_C        reduce using rule 125 (paso1_id_cuadruplo -> .)
    DIFFERENT       reduce using rule 125 (paso1_id_cuadruplo -> .)
    LE_THAN         reduce using rule 125 (paso1_id_cuadruplo -> .)
    GE_THAN         reduce using rule 125 (paso1_id_cuadruplo -> .)
    AND             reduce using rule 125 (paso1_id_cuadruplo -> .)
    OR              reduce using rule 125 (paso1_id_cuadruplo -> .)
    SEMICOLON       reduce using rule 125 (paso1_id_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 125 (paso1_id_cuadruplo -> .)
    R_BRACKET       reduce using rule 125 (paso1_id_cuadruplo -> .)
    COMA            reduce using rule 125 (paso1_id_cuadruplo -> .)

    paso1_id_cuadruplo             shift and go to state 203

state 169

    (55) opidfactor -> L_PARENTHESIS . seen_llamada_func_factor listargs R_PARENTHESIS gosub
    (119) seen_llamada_func_factor -> .

    NOT             reduce using rule 119 (seen_llamada_func_factor -> .)
    R_PARENTHESIS   reduce using rule 119 (seen_llamada_func_factor -> .)
    ID              reduce using rule 119 (seen_llamada_func_factor -> .)
    INT             reduce using rule 119 (seen_llamada_func_factor -> .)
    FLT             reduce using rule 119 (seen_llamada_func_factor -> .)
    TRUE            reduce using rule 119 (seen_llamada_func_factor -> .)
    FALSE           reduce using rule 119 (seen_llamada_func_factor -> .)
    CHR             reduce using rule 119 (seen_llamada_func_factor -> .)
    STRNG           reduce using rule 119 (seen_llamada_func_factor -> .)
    L_PARENTHESIS   reduce using rule 119 (seen_llamada_func_factor -> .)

    seen_llamada_func_factor       shift and go to state 204

state 170

    (57) opidfactor -> e .

    MULTIPLY        reduce using rule 57 (opidfactor -> e .)
    DIVIDE          reduce using rule 57 (opidfactor -> e .)
    PLUS            reduce using rule 57 (opidfactor -> e .)
    MINUS           reduce using rule 57 (opidfactor -> e .)
    L_THAN          reduce using rule 57 (opidfactor -> e .)
    G_THAN          reduce using rule 57 (opidfactor -> e .)
    EQUALS_C        reduce using rule 57 (opidfactor -> e .)
    DIFFERENT       reduce using rule 57 (opidfactor -> e .)
    LE_THAN         reduce using rule 57 (opidfactor -> e .)
    GE_THAN         reduce using rule 57 (opidfactor -> e .)
    AND             reduce using rule 57 (opidfactor -> e .)
    OR              reduce using rule 57 (opidfactor -> e .)
    SEMICOLON       reduce using rule 57 (opidfactor -> e .)
    R_PARENTHESIS   reduce using rule 57 (opidfactor -> e .)
    R_BRACKET       reduce using rule 57 (opidfactor -> e .)
    COMA            reduce using rule 57 (opidfactor -> e .)


state 171

    (67) opexp -> e .

    L_THAN          reduce using rule 67 (opexp -> e .)
    G_THAN          reduce using rule 67 (opexp -> e .)
    EQUALS_C        reduce using rule 67 (opexp -> e .)
    DIFFERENT       reduce using rule 67 (opexp -> e .)
    LE_THAN         reduce using rule 67 (opexp -> e .)
    GE_THAN         reduce using rule 67 (opexp -> e .)
    AND             reduce using rule 67 (opexp -> e .)
    OR              reduce using rule 67 (opexp -> e .)
    SEMICOLON       reduce using rule 67 (opexp -> e .)
    R_PARENTHESIS   reduce using rule 67 (opexp -> e .)
    R_BRACKET       reduce using rule 67 (opexp -> e .)
    COMA            reduce using rule 67 (opexp -> e .)


state 172

    (65) opexp -> PLUS . paso2y3_cuadruplos aritmetica
    (131) paso2y3_cuadruplos -> .

    ID              reduce using rule 131 (paso2y3_cuadruplos -> .)
    INT             reduce using rule 131 (paso2y3_cuadruplos -> .)
    FLT             reduce using rule 131 (paso2y3_cuadruplos -> .)
    TRUE            reduce using rule 131 (paso2y3_cuadruplos -> .)
    FALSE           reduce using rule 131 (paso2y3_cuadruplos -> .)
    CHR             reduce using rule 131 (paso2y3_cuadruplos -> .)
    STRNG           reduce using rule 131 (paso2y3_cuadruplos -> .)
    L_PARENTHESIS   reduce using rule 131 (paso2y3_cuadruplos -> .)

    paso2y3_cuadruplos             shift and go to state 205

state 173

    (66) opexp -> MINUS . paso2y3_cuadruplos aritmetica
    (131) paso2y3_cuadruplos -> .

    ID              reduce using rule 131 (paso2y3_cuadruplos -> .)
    INT             reduce using rule 131 (paso2y3_cuadruplos -> .)
    FLT             reduce using rule 131 (paso2y3_cuadruplos -> .)
    TRUE            reduce using rule 131 (paso2y3_cuadruplos -> .)
    FALSE           reduce using rule 131 (paso2y3_cuadruplos -> .)
    CHR             reduce using rule 131 (paso2y3_cuadruplos -> .)
    STRNG           reduce using rule 131 (paso2y3_cuadruplos -> .)
    L_PARENTHESIS   reduce using rule 131 (paso2y3_cuadruplos -> .)

    paso2y3_cuadruplos             shift and go to state 206

state 174

    (45) aritmetica -> term paso5_cuadruplo opexp .

    L_THAN          reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    G_THAN          reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    EQUALS_C        reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    DIFFERENT       reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    LE_THAN         reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    GE_THAN         reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    AND             reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    OR              reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    SEMICOLON       reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    R_PARENTHESIS   reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    R_BRACKET       reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)
    COMA            reduce using rule 45 (aritmetica -> term paso5_cuadruplo opexp .)


state 175

    (97) while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo . R_PARENTHESIS bloque while_paso3_codigo

    R_PARENTHESIS   shift and go to state 207


state 176

    (91) escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON . seen_print
    (147) seen_print -> .

    RETURN          reduce using rule 147 (seen_print -> .)
    ID              reduce using rule 147 (seen_print -> .)
    IF              reduce using rule 147 (seen_print -> .)
    PRINT           reduce using rule 147 (seen_print -> .)
    SCAN            reduce using rule 147 (seen_print -> .)
    INTEGER         reduce using rule 147 (seen_print -> .)
    FLOAT           reduce using rule 147 (seen_print -> .)
    STRING          reduce using rule 147 (seen_print -> .)
    CHAR            reduce using rule 147 (seen_print -> .)
    BOOLEAN         reduce using rule 147 (seen_print -> .)
    WHILE           reduce using rule 147 (seen_print -> .)
    DO              reduce using rule 147 (seen_print -> .)
    FOR             reduce using rule 147 (seen_print -> .)
    R_BRACE         reduce using rule 147 (seen_print -> .)

    seen_print                     shift and go to state 208

state 177

    (92) scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON . seen_scan
    (146) seen_scan -> .

    RETURN          reduce using rule 146 (seen_scan -> .)
    ID              reduce using rule 146 (seen_scan -> .)
    IF              reduce using rule 146 (seen_scan -> .)
    PRINT           reduce using rule 146 (seen_scan -> .)
    SCAN            reduce using rule 146 (seen_scan -> .)
    INTEGER         reduce using rule 146 (seen_scan -> .)
    FLOAT           reduce using rule 146 (seen_scan -> .)
    STRING          reduce using rule 146 (seen_scan -> .)
    CHAR            reduce using rule 146 (seen_scan -> .)
    BOOLEAN         reduce using rule 146 (seen_scan -> .)
    WHILE           reduce using rule 146 (seen_scan -> .)
    DO              reduce using rule 146 (seen_scan -> .)
    FOR             reduce using rule 146 (seen_scan -> .)
    R_BRACE         reduce using rule 146 (seen_scan -> .)

    seen_scan                      shift and go to state 209

state 178

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo . SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo

    SEMICOLON       shift and go to state 210


state 179

    (71) castto -> CHAR .

    L_PARENTHESIS   reduce using rule 71 (castto -> CHAR .)


state 180

    (72) castto -> INTEGER .

    L_PARENTHESIS   reduce using rule 72 (castto -> INTEGER .)


state 181

    (70) castto -> STRING .

    L_PARENTHESIS   reduce using rule 70 (castto -> STRING .)


state 182

    (42) asignacion -> ID opesarr EQUALS seen_equals castono . equals_pendiente
    (145) equals_pendiente -> .

    SEMICOLON       reduce using rule 145 (equals_pendiente -> .)
    COMA            reduce using rule 145 (equals_pendiente -> .)
    R_PARENTHESIS   reduce using rule 145 (equals_pendiente -> .)

    equals_pendiente               shift and go to state 211

state 183

    (68) castono -> castto . L_PARENTHESIS exp R_PARENTHESIS

    L_PARENTHESIS   shift and go to state 212


state 184

    (73) castto -> FLOAT .

    L_PARENTHESIS   reduce using rule 73 (castto -> FLOAT .)


state 185

    (69) castono -> exp .

    SEMICOLON       reduce using rule 69 (castono -> exp .)
    COMA            reduce using rule 69 (castono -> exp .)
    R_PARENTHESIS   reduce using rule 69 (castono -> exp .)


state 186

    (41) llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs . R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON

    R_PARENTHESIS   shift and go to state 213


state 187

    (59) listargs -> e .
    (84) opcnegar -> e .

    R_PARENTHESIS   reduce using rule 59 (listargs -> e .)
    ID              reduce using rule 84 (opcnegar -> e .)
    INT             reduce using rule 84 (opcnegar -> e .)
    FLT             reduce using rule 84 (opcnegar -> e .)
    TRUE            reduce using rule 84 (opcnegar -> e .)
    FALSE           reduce using rule 84 (opcnegar -> e .)
    CHR             reduce using rule 84 (opcnegar -> e .)
    STRNG           reduce using rule 84 (opcnegar -> e .)
    L_PARENTHESIS   reduce using rule 84 (opcnegar -> e .)


state 188

    (58) listargs -> exp . seen_argumento_funcion masargs
    (120) seen_argumento_funcion -> .

    COMA            reduce using rule 120 (seen_argumento_funcion -> .)
    R_PARENTHESIS   reduce using rule 120 (seen_argumento_funcion -> .)

    seen_argumento_funcion         shift and go to state 214

state 189

    (103) if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS . bloque listaelif else if_paso2_codigo
    (27) bloque -> . L_BRACE listaestatutos R_BRACE

    L_BRACE         shift and go to state 83

    bloque                         shift and go to state 215

state 190

    (21) declaraparametros -> tipo ID opcionesdp seen_paso2_def_proc . listadp
    (25) listadp -> . COMA declaraparametros
    (26) listadp -> . e
    (2) e -> .

    COMA            shift and go to state 217
    R_PARENTHESIS   reduce using rule 2 (e -> .)

    e                              shift and go to state 216
    listadp                        shift and go to state 218

state 191

    (23) opcionesdp -> L_BRACKET R_BRACKET .

    COMA            reduce using rule 23 (opcionesdp -> L_BRACKET R_BRACKET .)
    R_PARENTHESIS   reduce using rule 23 (opcionesdp -> L_BRACKET R_BRACKET .)


state 192

    (7) declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal . endproc
    (116) endproc -> .

    GLOBAL          reduce using rule 116 (endproc -> .)
    VOID            reduce using rule 116 (endproc -> .)
    INTEGER         reduce using rule 116 (endproc -> .)
    FLOAT           reduce using rule 116 (endproc -> .)
    STRING          reduce using rule 116 (endproc -> .)
    CHAR            reduce using rule 116 (endproc -> .)
    BOOLEAN         reduce using rule 116 (endproc -> .)
    MAIN            reduce using rule 116 (endproc -> .)

    endproc                        shift and go to state 219

state 193

    (98) dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp . R_PARENTHESIS dowhile_paso4_codigo SEMICOLON

    R_PARENTHESIS   shift and go to state 220


state 194

    (75) listaor -> OR if_paso1_cuadruplo exp .

    SEMICOLON       reduce using rule 75 (listaor -> OR if_paso1_cuadruplo exp .)
    R_PARENTHESIS   reduce using rule 75 (listaor -> OR if_paso1_cuadruplo exp .)
    R_BRACKET       reduce using rule 75 (listaor -> OR if_paso1_cuadruplo exp .)
    COMA            reduce using rule 75 (listaor -> OR if_paso1_cuadruplo exp .)


state 195

    (78) listand -> AND . if_paso2_cuadruplo exp_and
    (137) if_paso2_cuadruplo -> .

    NOT             reduce using rule 137 (if_paso2_cuadruplo -> .)
    ID              reduce using rule 137 (if_paso2_cuadruplo -> .)
    INT             reduce using rule 137 (if_paso2_cuadruplo -> .)
    FLT             reduce using rule 137 (if_paso2_cuadruplo -> .)
    TRUE            reduce using rule 137 (if_paso2_cuadruplo -> .)
    FALSE           reduce using rule 137 (if_paso2_cuadruplo -> .)
    CHR             reduce using rule 137 (if_paso2_cuadruplo -> .)
    STRNG           reduce using rule 137 (if_paso2_cuadruplo -> .)
    L_PARENTHESIS   reduce using rule 137 (if_paso2_cuadruplo -> .)

    if_paso2_cuadruplo             shift and go to state 221

state 196

    (77) exp_and -> opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand .

    OR              reduce using rule 77 (exp_and -> opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand .)
    R_PARENTHESIS   reduce using rule 77 (exp_and -> opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand .)
    SEMICOLON       reduce using rule 77 (exp_and -> opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand .)
    R_BRACKET       reduce using rule 77 (exp_and -> opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand .)
    COMA            reduce using rule 77 (exp_and -> opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand .)


state 197

    (79) listand -> e .

    OR              reduce using rule 79 (listand -> e .)
    SEMICOLON       reduce using rule 79 (listand -> e .)
    R_PARENTHESIS   reduce using rule 79 (listand -> e .)
    R_BRACKET       reduce using rule 79 (listand -> e .)
    COMA            reduce using rule 79 (listand -> e .)


state 198

    (81) esComp -> bexpop if_paso6_cuadruplo aritmetica . if_paso7_cuadruplo
    (142) if_paso7_cuadruplo -> .

    AND             reduce using rule 142 (if_paso7_cuadruplo -> .)
    OR              reduce using rule 142 (if_paso7_cuadruplo -> .)
    SEMICOLON       reduce using rule 142 (if_paso7_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 142 (if_paso7_cuadruplo -> .)
    R_BRACKET       reduce using rule 142 (if_paso7_cuadruplo -> .)
    COMA            reduce using rule 142 (if_paso7_cuadruplo -> .)

    if_paso7_cuadruplo             shift and go to state 222

state 199

    (63) opterm -> DIVIDE paso2y3_cuadruplos . term
    (46) term -> . factor paso4_cuadruplo opterm
    (47) factor -> . ID seen_id_factor opidfactor paso1_id_cuadruplo
    (48) factor -> . INT paso1_int_cuadruplo
    (49) factor -> . FLT paso1_float_cuadruplo
    (50) factor -> . TRUE paso1_bool_cuadruplo
    (51) factor -> . FALSE paso1_bool_cuadruplo
    (52) factor -> . CHR paso1_char_cuadruplo
    (53) factor -> . STRNG paso1_string_cuadruplo
    (54) factor -> . L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo

    ID              shift and go to state 94
    INT             shift and go to state 97
    FLT             shift and go to state 86
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    CHR             shift and go to state 93
    STRNG           shift and go to state 92
    L_PARENTHESIS   shift and go to state 91

    term                           shift and go to state 223
    factor                         shift and go to state 90

state 200

    (62) opterm -> MULTIPLY paso2y3_cuadruplos . term
    (46) term -> . factor paso4_cuadruplo opterm
    (47) factor -> . ID seen_id_factor opidfactor paso1_id_cuadruplo
    (48) factor -> . INT paso1_int_cuadruplo
    (49) factor -> . FLT paso1_float_cuadruplo
    (50) factor -> . TRUE paso1_bool_cuadruplo
    (51) factor -> . FALSE paso1_bool_cuadruplo
    (52) factor -> . CHR paso1_char_cuadruplo
    (53) factor -> . STRNG paso1_string_cuadruplo
    (54) factor -> . L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo

    ID              shift and go to state 94
    INT             shift and go to state 97
    FLT             shift and go to state 86
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    CHR             shift and go to state 93
    STRNG           shift and go to state 92
    L_PARENTHESIS   shift and go to state 91

    term                           shift and go to state 224
    factor                         shift and go to state 90

state 201

    (54) factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS . paso7_cuadruplo
    (135) paso7_cuadruplo -> .

    MULTIPLY        reduce using rule 135 (paso7_cuadruplo -> .)
    DIVIDE          reduce using rule 135 (paso7_cuadruplo -> .)
    PLUS            reduce using rule 135 (paso7_cuadruplo -> .)
    MINUS           reduce using rule 135 (paso7_cuadruplo -> .)
    L_THAN          reduce using rule 135 (paso7_cuadruplo -> .)
    G_THAN          reduce using rule 135 (paso7_cuadruplo -> .)
    EQUALS_C        reduce using rule 135 (paso7_cuadruplo -> .)
    DIFFERENT       reduce using rule 135 (paso7_cuadruplo -> .)
    LE_THAN         reduce using rule 135 (paso7_cuadruplo -> .)
    GE_THAN         reduce using rule 135 (paso7_cuadruplo -> .)
    AND             reduce using rule 135 (paso7_cuadruplo -> .)
    OR              reduce using rule 135 (paso7_cuadruplo -> .)
    SEMICOLON       reduce using rule 135 (paso7_cuadruplo -> .)
    R_PARENTHESIS   reduce using rule 135 (paso7_cuadruplo -> .)
    R_BRACKET       reduce using rule 135 (paso7_cuadruplo -> .)
    COMA            reduce using rule 135 (paso7_cuadruplo -> .)

    paso7_cuadruplo                shift and go to state 225

state 202

    (56) opidfactor -> L_BRACKET exp . R_BRACKET

    R_BRACKET       shift and go to state 226


state 203

    (47) factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .

    MULTIPLY        reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    DIVIDE          reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    PLUS            reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    MINUS           reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    L_THAN          reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    G_THAN          reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    EQUALS_C        reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    DIFFERENT       reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    LE_THAN         reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    GE_THAN         reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    AND             reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    OR              reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    SEMICOLON       reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    R_PARENTHESIS   reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    R_BRACKET       reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)
    COMA            reduce using rule 47 (factor -> ID seen_id_factor opidfactor paso1_id_cuadruplo .)


state 204

    (55) opidfactor -> L_PARENTHESIS seen_llamada_func_factor . listargs R_PARENTHESIS gosub
    (58) listargs -> . exp seen_argumento_funcion masargs
    (59) listargs -> . e
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (2) e -> .
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e

    R_PARENTHESIS   reduce using rule 2 (e -> .)
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)
    NOT             shift and go to state 62

    e                              shift and go to state 187
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 188
    exp_and                        shift and go to state 59
    listargs                       shift and go to state 227

state 205

    (65) opexp -> PLUS paso2y3_cuadruplos . aritmetica
    (45) aritmetica -> . term paso5_cuadruplo opexp
    (46) term -> . factor paso4_cuadruplo opterm
    (47) factor -> . ID seen_id_factor opidfactor paso1_id_cuadruplo
    (48) factor -> . INT paso1_int_cuadruplo
    (49) factor -> . FLT paso1_float_cuadruplo
    (50) factor -> . TRUE paso1_bool_cuadruplo
    (51) factor -> . FALSE paso1_bool_cuadruplo
    (52) factor -> . CHR paso1_char_cuadruplo
    (53) factor -> . STRNG paso1_string_cuadruplo
    (54) factor -> . L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo

    ID              shift and go to state 94
    INT             shift and go to state 97
    FLT             shift and go to state 86
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    CHR             shift and go to state 93
    STRNG           shift and go to state 92
    L_PARENTHESIS   shift and go to state 91

    term                           shift and go to state 95
    aritmetica                     shift and go to state 228
    factor                         shift and go to state 90

state 206

    (66) opexp -> MINUS paso2y3_cuadruplos . aritmetica
    (45) aritmetica -> . term paso5_cuadruplo opexp
    (46) term -> . factor paso4_cuadruplo opterm
    (47) factor -> . ID seen_id_factor opidfactor paso1_id_cuadruplo
    (48) factor -> . INT paso1_int_cuadruplo
    (49) factor -> . FLT paso1_float_cuadruplo
    (50) factor -> . TRUE paso1_bool_cuadruplo
    (51) factor -> . FALSE paso1_bool_cuadruplo
    (52) factor -> . CHR paso1_char_cuadruplo
    (53) factor -> . STRNG paso1_string_cuadruplo
    (54) factor -> . L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo

    ID              shift and go to state 94
    INT             shift and go to state 97
    FLT             shift and go to state 86
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    CHR             shift and go to state 93
    STRNG           shift and go to state 92
    L_PARENTHESIS   shift and go to state 91

    term                           shift and go to state 95
    aritmetica                     shift and go to state 229
    factor                         shift and go to state 90

state 207

    (97) while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS . bloque while_paso3_codigo
    (27) bloque -> . L_BRACE listaestatutos R_BRACE

    L_BRACE         shift and go to state 83

    bloque                         shift and go to state 230

state 208

    (91) escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .

    RETURN          reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    ID              reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    IF              reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    PRINT           reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    SCAN            reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    INTEGER         reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    FLOAT           reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    STRING          reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    CHAR            reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    BOOLEAN         reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    WHILE           reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    DO              reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    FOR             reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)
    R_BRACE         reduce using rule 91 (escritura -> PRINT L_PARENTHESIS exp R_PARENTHESIS SEMICOLON seen_print .)


state 209

    (92) scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .

    RETURN          reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    ID              reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    IF              reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    PRINT           reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    SCAN            reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    INTEGER         reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    FLOAT           reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    STRING          reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    CHAR            reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    BOOLEAN         reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    WHILE           reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    DO              reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    FOR             reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)
    R_BRACE         reduce using rule 92 (scan -> SCAN L_PARENTHESIS ID R_PARENTHESIS SEMICOLON seen_scan .)


state 210

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON . for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo
    (158) for_paso3_codigo -> .

    ID              reduce using rule 158 (for_paso3_codigo -> .)

    for_paso3_codigo               shift and go to state 231

state 211

    (42) asignacion -> ID opesarr EQUALS seen_equals castono equals_pendiente .

    SEMICOLON       reduce using rule 42 (asignacion -> ID opesarr EQUALS seen_equals castono equals_pendiente .)
    COMA            reduce using rule 42 (asignacion -> ID opesarr EQUALS seen_equals castono equals_pendiente .)
    R_PARENTHESIS   reduce using rule 42 (asignacion -> ID opesarr EQUALS seen_equals castono equals_pendiente .)


state 212

    (68) castono -> castto L_PARENTHESIS . exp R_PARENTHESIS
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 232
    e                              shift and go to state 63

state 213

    (41) llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS . seen_verifica_cant_args gosub SEMICOLON
    (121) seen_verifica_cant_args -> .

    SEMICOLON       reduce using rule 121 (seen_verifica_cant_args -> .)

    seen_verifica_cant_args        shift and go to state 233

state 214

    (58) listargs -> exp seen_argumento_funcion . masargs
    (60) masargs -> . COMA listargs
    (61) masargs -> . e
    (2) e -> .

    COMA            shift and go to state 236
    R_PARENTHESIS   reduce using rule 2 (e -> .)

    e                              shift and go to state 234
    masargs                        shift and go to state 235

state 215

    (103) if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque . listaelif else if_paso2_codigo
    (104) listaelif -> . elif listaelif
    (105) listaelif -> . e
    (106) elif -> . ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque
    (2) e -> .

    ELIF            shift and go to state 239
    ELSE            reduce using rule 2 (e -> .)
    RETURN          reduce using rule 2 (e -> .)
    ID              reduce using rule 2 (e -> .)
    IF              reduce using rule 2 (e -> .)
    PRINT           reduce using rule 2 (e -> .)
    SCAN            reduce using rule 2 (e -> .)
    INTEGER         reduce using rule 2 (e -> .)
    FLOAT           reduce using rule 2 (e -> .)
    STRING          reduce using rule 2 (e -> .)
    CHAR            reduce using rule 2 (e -> .)
    BOOLEAN         reduce using rule 2 (e -> .)
    WHILE           reduce using rule 2 (e -> .)
    DO              reduce using rule 2 (e -> .)
    FOR             reduce using rule 2 (e -> .)
    R_BRACE         reduce using rule 2 (e -> .)

    elif                           shift and go to state 237
    e                              shift and go to state 238
    listaelif                      shift and go to state 240

state 216

    (26) listadp -> e .

    R_PARENTHESIS   reduce using rule 26 (listadp -> e .)


state 217

    (25) listadp -> COMA . declaraparametros
    (21) declaraparametros -> . tipo ID opcionesdp seen_paso2_def_proc listadp
    (22) declaraparametros -> . e
    (11) tipo -> . INTEGER
    (12) tipo -> . FLOAT
    (13) tipo -> . STRING
    (14) tipo -> . CHAR
    (15) tipo -> . BOOLEAN
    (2) e -> .

    INTEGER         shift and go to state 11
    FLOAT           shift and go to state 16
    STRING          shift and go to state 7
    CHAR            shift and go to state 6
    BOOLEAN         shift and go to state 17
    R_PARENTHESIS   reduce using rule 2 (e -> .)

    e                              shift and go to state 77
    tipo                           shift and go to state 78
    declaraparametros              shift and go to state 241

state 218

    (21) declaraparametros -> tipo ID opcionesdp seen_paso2_def_proc listadp .

    R_PARENTHESIS   reduce using rule 21 (declaraparametros -> tipo ID opcionesdp seen_paso2_def_proc listadp .)


state 219

    (7) declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc .

    GLOBAL          reduce using rule 7 (declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc .)
    VOID            reduce using rule 7 (declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc .)
    INTEGER         reduce using rule 7 (declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc .)
    FLOAT           reduce using rule 7 (declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc .)
    STRING          reduce using rule 7 (declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc .)
    CHAR            reduce using rule 7 (declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc .)
    BOOLEAN         reduce using rule 7 (declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc .)
    MAIN            reduce using rule 7 (declarafuncion -> tipofunc FUNC ID seen_funcion L_PARENTHESIS declaraparametros R_PARENTHESIS seen_dir_inicio bloqueprincipal endproc .)


state 220

    (98) dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS . dowhile_paso4_codigo SEMICOLON
    (155) dowhile_paso4_codigo -> .

    SEMICOLON       reduce using rule 155 (dowhile_paso4_codigo -> .)

    dowhile_paso4_codigo           shift and go to state 242

state 221

    (78) listand -> AND if_paso2_cuadruplo . exp_and
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 243
    opcnegar                       shift and go to state 60
    e                              shift and go to state 63

state 222

    (81) esComp -> bexpop if_paso6_cuadruplo aritmetica if_paso7_cuadruplo .

    AND             reduce using rule 81 (esComp -> bexpop if_paso6_cuadruplo aritmetica if_paso7_cuadruplo .)
    OR              reduce using rule 81 (esComp -> bexpop if_paso6_cuadruplo aritmetica if_paso7_cuadruplo .)
    SEMICOLON       reduce using rule 81 (esComp -> bexpop if_paso6_cuadruplo aritmetica if_paso7_cuadruplo .)
    R_PARENTHESIS   reduce using rule 81 (esComp -> bexpop if_paso6_cuadruplo aritmetica if_paso7_cuadruplo .)
    R_BRACKET       reduce using rule 81 (esComp -> bexpop if_paso6_cuadruplo aritmetica if_paso7_cuadruplo .)
    COMA            reduce using rule 81 (esComp -> bexpop if_paso6_cuadruplo aritmetica if_paso7_cuadruplo .)


state 223

    (63) opterm -> DIVIDE paso2y3_cuadruplos term .

    PLUS            reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    MINUS           reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    L_THAN          reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    G_THAN          reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    EQUALS_C        reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    DIFFERENT       reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    LE_THAN         reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    GE_THAN         reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    AND             reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    OR              reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    SEMICOLON       reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    R_PARENTHESIS   reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    R_BRACKET       reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)
    COMA            reduce using rule 63 (opterm -> DIVIDE paso2y3_cuadruplos term .)


state 224

    (62) opterm -> MULTIPLY paso2y3_cuadruplos term .

    PLUS            reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    MINUS           reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    L_THAN          reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    G_THAN          reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    EQUALS_C        reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    DIFFERENT       reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    LE_THAN         reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    GE_THAN         reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    AND             reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    OR              reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    SEMICOLON       reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    R_PARENTHESIS   reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    R_BRACKET       reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)
    COMA            reduce using rule 62 (opterm -> MULTIPLY paso2y3_cuadruplos term .)


state 225

    (54) factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .

    MULTIPLY        reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    DIVIDE          reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    PLUS            reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    MINUS           reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    L_THAN          reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    G_THAN          reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    EQUALS_C        reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    DIFFERENT       reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    LE_THAN         reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    GE_THAN         reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    AND             reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    OR              reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    SEMICOLON       reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    R_PARENTHESIS   reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    R_BRACKET       reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)
    COMA            reduce using rule 54 (factor -> L_PARENTHESIS paso6_cuadruplo exp R_PARENTHESIS paso7_cuadruplo .)


state 226

    (56) opidfactor -> L_BRACKET exp R_BRACKET .

    MULTIPLY        reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    DIVIDE          reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    PLUS            reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    MINUS           reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    L_THAN          reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    G_THAN          reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    EQUALS_C        reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    DIFFERENT       reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    LE_THAN         reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    GE_THAN         reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    AND             reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    OR              reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    SEMICOLON       reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    R_PARENTHESIS   reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    R_BRACKET       reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)
    COMA            reduce using rule 56 (opidfactor -> L_BRACKET exp R_BRACKET .)


state 227

    (55) opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs . R_PARENTHESIS gosub

    R_PARENTHESIS   shift and go to state 244


state 228

    (65) opexp -> PLUS paso2y3_cuadruplos aritmetica .

    L_THAN          reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    G_THAN          reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    EQUALS_C        reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    DIFFERENT       reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    LE_THAN         reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    GE_THAN         reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    AND             reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    OR              reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    SEMICOLON       reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    R_PARENTHESIS   reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    R_BRACKET       reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)
    COMA            reduce using rule 65 (opexp -> PLUS paso2y3_cuadruplos aritmetica .)


state 229

    (66) opexp -> MINUS paso2y3_cuadruplos aritmetica .

    L_THAN          reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    G_THAN          reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    EQUALS_C        reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    DIFFERENT       reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    LE_THAN         reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    GE_THAN         reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    AND             reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    OR              reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    SEMICOLON       reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    R_PARENTHESIS   reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    R_BRACKET       reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)
    COMA            reduce using rule 66 (opexp -> MINUS paso2y3_cuadruplos aritmetica .)


state 230

    (97) while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque . while_paso3_codigo
    (154) while_paso3_codigo -> .

    RETURN          reduce using rule 154 (while_paso3_codigo -> .)
    ID              reduce using rule 154 (while_paso3_codigo -> .)
    IF              reduce using rule 154 (while_paso3_codigo -> .)
    PRINT           reduce using rule 154 (while_paso3_codigo -> .)
    SCAN            reduce using rule 154 (while_paso3_codigo -> .)
    INTEGER         reduce using rule 154 (while_paso3_codigo -> .)
    FLOAT           reduce using rule 154 (while_paso3_codigo -> .)
    STRING          reduce using rule 154 (while_paso3_codigo -> .)
    CHAR            reduce using rule 154 (while_paso3_codigo -> .)
    BOOLEAN         reduce using rule 154 (while_paso3_codigo -> .)
    WHILE           reduce using rule 154 (while_paso3_codigo -> .)
    DO              reduce using rule 154 (while_paso3_codigo -> .)
    FOR             reduce using rule 154 (while_paso3_codigo -> .)
    R_BRACE         reduce using rule 154 (while_paso3_codigo -> .)

    while_paso3_codigo             shift and go to state 245

state 231

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo . increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo
    (100) increment -> . asignacion listaincrement
    (42) asignacion -> . ID opesarr EQUALS seen_equals castono equals_pendiente

    ID              shift and go to state 248

    asignacion                     shift and go to state 247
    increment                      shift and go to state 246

state 232

    (68) castono -> castto L_PARENTHESIS exp . R_PARENTHESIS

    R_PARENTHESIS   shift and go to state 249


state 233

    (41) llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args . gosub SEMICOLON
    (122) gosub -> .

    SEMICOLON       reduce using rule 122 (gosub -> .)

    gosub                          shift and go to state 250

state 234

    (61) masargs -> e .

    R_PARENTHESIS   reduce using rule 61 (masargs -> e .)


state 235

    (58) listargs -> exp seen_argumento_funcion masargs .

    R_PARENTHESIS   reduce using rule 58 (listargs -> exp seen_argumento_funcion masargs .)


state 236

    (60) masargs -> COMA . listargs
    (58) listargs -> . exp seen_argumento_funcion masargs
    (59) listargs -> . e
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (2) e -> .
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e

    R_PARENTHESIS   reduce using rule 2 (e -> .)
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)
    NOT             shift and go to state 62

    exp_and                        shift and go to state 59
    opcnegar                       shift and go to state 60
    exp                            shift and go to state 188
    e                              shift and go to state 187
    listargs                       shift and go to state 251

state 237

    (104) listaelif -> elif . listaelif
    (104) listaelif -> . elif listaelif
    (105) listaelif -> . e
    (106) elif -> . ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque
    (2) e -> .

    ELIF            shift and go to state 239
    ELSE            reduce using rule 2 (e -> .)
    RETURN          reduce using rule 2 (e -> .)
    ID              reduce using rule 2 (e -> .)
    IF              reduce using rule 2 (e -> .)
    PRINT           reduce using rule 2 (e -> .)
    SCAN            reduce using rule 2 (e -> .)
    INTEGER         reduce using rule 2 (e -> .)
    FLOAT           reduce using rule 2 (e -> .)
    STRING          reduce using rule 2 (e -> .)
    CHAR            reduce using rule 2 (e -> .)
    BOOLEAN         reduce using rule 2 (e -> .)
    WHILE           reduce using rule 2 (e -> .)
    DO              reduce using rule 2 (e -> .)
    FOR             reduce using rule 2 (e -> .)
    R_BRACE         reduce using rule 2 (e -> .)

    elif                           shift and go to state 237
    e                              shift and go to state 238
    listaelif                      shift and go to state 252

state 238

    (105) listaelif -> e .

    ELSE            reduce using rule 105 (listaelif -> e .)
    RETURN          reduce using rule 105 (listaelif -> e .)
    ID              reduce using rule 105 (listaelif -> e .)
    IF              reduce using rule 105 (listaelif -> e .)
    PRINT           reduce using rule 105 (listaelif -> e .)
    SCAN            reduce using rule 105 (listaelif -> e .)
    INTEGER         reduce using rule 105 (listaelif -> e .)
    FLOAT           reduce using rule 105 (listaelif -> e .)
    STRING          reduce using rule 105 (listaelif -> e .)
    CHAR            reduce using rule 105 (listaelif -> e .)
    BOOLEAN         reduce using rule 105 (listaelif -> e .)
    WHILE           reduce using rule 105 (listaelif -> e .)
    DO              reduce using rule 105 (listaelif -> e .)
    FOR             reduce using rule 105 (listaelif -> e .)
    R_BRACE         reduce using rule 105 (listaelif -> e .)


state 239

    (106) elif -> ELIF . L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque

    L_PARENTHESIS   shift and go to state 253


state 240

    (103) if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif . else if_paso2_codigo
    (107) else -> . if_paso3_codigo ELSE bloque
    (108) else -> . e
    (150) if_paso3_codigo -> .
    (2) e -> .

    ELSE            reduce using rule 150 (if_paso3_codigo -> .)
    RETURN          reduce using rule 2 (e -> .)
    ID              reduce using rule 2 (e -> .)
    IF              reduce using rule 2 (e -> .)
    PRINT           reduce using rule 2 (e -> .)
    SCAN            reduce using rule 2 (e -> .)
    INTEGER         reduce using rule 2 (e -> .)
    FLOAT           reduce using rule 2 (e -> .)
    STRING          reduce using rule 2 (e -> .)
    CHAR            reduce using rule 2 (e -> .)
    BOOLEAN         reduce using rule 2 (e -> .)
    WHILE           reduce using rule 2 (e -> .)
    DO              reduce using rule 2 (e -> .)
    FOR             reduce using rule 2 (e -> .)
    R_BRACE         reduce using rule 2 (e -> .)

    e                              shift and go to state 254
    if_paso3_codigo                shift and go to state 255
    else                           shift and go to state 256

state 241

    (25) listadp -> COMA declaraparametros .

    R_PARENTHESIS   reduce using rule 25 (listadp -> COMA declaraparametros .)


state 242

    (98) dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo . SEMICOLON

    SEMICOLON       shift and go to state 257


state 243

    (78) listand -> AND if_paso2_cuadruplo exp_and .

    OR              reduce using rule 78 (listand -> AND if_paso2_cuadruplo exp_and .)
    SEMICOLON       reduce using rule 78 (listand -> AND if_paso2_cuadruplo exp_and .)
    R_PARENTHESIS   reduce using rule 78 (listand -> AND if_paso2_cuadruplo exp_and .)
    R_BRACKET       reduce using rule 78 (listand -> AND if_paso2_cuadruplo exp_and .)
    COMA            reduce using rule 78 (listand -> AND if_paso2_cuadruplo exp_and .)


state 244

    (55) opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS . gosub
    (122) gosub -> .

    MULTIPLY        reduce using rule 122 (gosub -> .)
    DIVIDE          reduce using rule 122 (gosub -> .)
    PLUS            reduce using rule 122 (gosub -> .)
    MINUS           reduce using rule 122 (gosub -> .)
    L_THAN          reduce using rule 122 (gosub -> .)
    G_THAN          reduce using rule 122 (gosub -> .)
    EQUALS_C        reduce using rule 122 (gosub -> .)
    DIFFERENT       reduce using rule 122 (gosub -> .)
    LE_THAN         reduce using rule 122 (gosub -> .)
    GE_THAN         reduce using rule 122 (gosub -> .)
    AND             reduce using rule 122 (gosub -> .)
    OR              reduce using rule 122 (gosub -> .)
    SEMICOLON       reduce using rule 122 (gosub -> .)
    R_PARENTHESIS   reduce using rule 122 (gosub -> .)
    R_BRACKET       reduce using rule 122 (gosub -> .)
    COMA            reduce using rule 122 (gosub -> .)

    gosub                          shift and go to state 258

state 245

    (97) while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .

    RETURN          reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    ID              reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    IF              reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    PRINT           reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    SCAN            reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    INTEGER         reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    FLOAT           reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    STRING          reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    CHAR            reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    BOOLEAN         reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    WHILE           reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    DO              reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    FOR             reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)
    R_BRACE         reduce using rule 97 (while -> WHILE while_paso1_codigo L_PARENTHESIS exp while_paso2_codigo R_PARENTHESIS bloque while_paso3_codigo .)


state 246

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment . for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo
    (159) for_paso4_codigo -> .

    R_PARENTHESIS   reduce using rule 159 (for_paso4_codigo -> .)

    for_paso4_codigo               shift and go to state 259

state 247

    (100) increment -> asignacion . listaincrement
    (101) listaincrement -> . COMA increment
    (102) listaincrement -> . e
    (2) e -> .

    COMA            shift and go to state 260
    R_PARENTHESIS   reduce using rule 2 (e -> .)

    e                              shift and go to state 261
    listaincrement                 shift and go to state 262

state 248

    (42) asignacion -> ID . opesarr EQUALS seen_equals castono equals_pendiente
    (43) opesarr -> . L_BRACKET exp R_BRACKET
    (44) opesarr -> . e
    (2) e -> .

    L_BRACKET       shift and go to state 73
    EQUALS          reduce using rule 2 (e -> .)

    e                              shift and go to state 71
    opesarr                        shift and go to state 72

state 249

    (68) castono -> castto L_PARENTHESIS exp R_PARENTHESIS .

    SEMICOLON       reduce using rule 68 (castono -> castto L_PARENTHESIS exp R_PARENTHESIS .)
    COMA            reduce using rule 68 (castono -> castto L_PARENTHESIS exp R_PARENTHESIS .)
    R_PARENTHESIS   reduce using rule 68 (castono -> castto L_PARENTHESIS exp R_PARENTHESIS .)


state 250

    (41) llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub . SEMICOLON

    SEMICOLON       shift and go to state 263


state 251

    (60) masargs -> COMA listargs .

    R_PARENTHESIS   reduce using rule 60 (masargs -> COMA listargs .)


state 252

    (104) listaelif -> elif listaelif .

    ELSE            reduce using rule 104 (listaelif -> elif listaelif .)
    RETURN          reduce using rule 104 (listaelif -> elif listaelif .)
    ID              reduce using rule 104 (listaelif -> elif listaelif .)
    IF              reduce using rule 104 (listaelif -> elif listaelif .)
    PRINT           reduce using rule 104 (listaelif -> elif listaelif .)
    SCAN            reduce using rule 104 (listaelif -> elif listaelif .)
    INTEGER         reduce using rule 104 (listaelif -> elif listaelif .)
    FLOAT           reduce using rule 104 (listaelif -> elif listaelif .)
    STRING          reduce using rule 104 (listaelif -> elif listaelif .)
    CHAR            reduce using rule 104 (listaelif -> elif listaelif .)
    BOOLEAN         reduce using rule 104 (listaelif -> elif listaelif .)
    WHILE           reduce using rule 104 (listaelif -> elif listaelif .)
    DO              reduce using rule 104 (listaelif -> elif listaelif .)
    FOR             reduce using rule 104 (listaelif -> elif listaelif .)
    R_BRACE         reduce using rule 104 (listaelif -> elif listaelif .)


state 253

    (106) elif -> ELIF L_PARENTHESIS . exp if_paso4_codigo R_PARENTHESIS bloque
    (74) exp -> . exp_and if_paso3_cuadruplo listaor
    (77) exp_and -> . opcnegar exp_bcomp if_paso8_cuadruplo if_paso4_cuadruplo listand
    (83) opcnegar -> . NOT if_paso5_cuadruplo
    (84) opcnegar -> . e
    (2) e -> .

    NOT             shift and go to state 62
    ID              reduce using rule 2 (e -> .)
    INT             reduce using rule 2 (e -> .)
    FLT             reduce using rule 2 (e -> .)
    TRUE            reduce using rule 2 (e -> .)
    FALSE           reduce using rule 2 (e -> .)
    CHR             reduce using rule 2 (e -> .)
    STRNG           reduce using rule 2 (e -> .)
    L_PARENTHESIS   reduce using rule 2 (e -> .)

    exp_and                        shift and go to state 59
    exp                            shift and go to state 264
    opcnegar                       shift and go to state 60
    e                              shift and go to state 63

state 254

    (108) else -> e .

    RETURN          reduce using rule 108 (else -> e .)
    ID              reduce using rule 108 (else -> e .)
    IF              reduce using rule 108 (else -> e .)
    PRINT           reduce using rule 108 (else -> e .)
    SCAN            reduce using rule 108 (else -> e .)
    INTEGER         reduce using rule 108 (else -> e .)
    FLOAT           reduce using rule 108 (else -> e .)
    STRING          reduce using rule 108 (else -> e .)
    CHAR            reduce using rule 108 (else -> e .)
    BOOLEAN         reduce using rule 108 (else -> e .)
    WHILE           reduce using rule 108 (else -> e .)
    DO              reduce using rule 108 (else -> e .)
    FOR             reduce using rule 108 (else -> e .)
    R_BRACE         reduce using rule 108 (else -> e .)


state 255

    (107) else -> if_paso3_codigo . ELSE bloque

    ELSE            shift and go to state 265


state 256

    (103) if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else . if_paso2_codigo
    (149) if_paso2_codigo -> .

    RETURN          reduce using rule 149 (if_paso2_codigo -> .)
    ID              reduce using rule 149 (if_paso2_codigo -> .)
    IF              reduce using rule 149 (if_paso2_codigo -> .)
    PRINT           reduce using rule 149 (if_paso2_codigo -> .)
    SCAN            reduce using rule 149 (if_paso2_codigo -> .)
    INTEGER         reduce using rule 149 (if_paso2_codigo -> .)
    FLOAT           reduce using rule 149 (if_paso2_codigo -> .)
    STRING          reduce using rule 149 (if_paso2_codigo -> .)
    CHAR            reduce using rule 149 (if_paso2_codigo -> .)
    BOOLEAN         reduce using rule 149 (if_paso2_codigo -> .)
    WHILE           reduce using rule 149 (if_paso2_codigo -> .)
    DO              reduce using rule 149 (if_paso2_codigo -> .)
    FOR             reduce using rule 149 (if_paso2_codigo -> .)
    R_BRACE         reduce using rule 149 (if_paso2_codigo -> .)

    if_paso2_codigo                shift and go to state 266

state 257

    (98) dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .

    RETURN          reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    ID              reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    IF              reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    PRINT           reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    SCAN            reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    INTEGER         reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    FLOAT           reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    STRING          reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    CHAR            reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    BOOLEAN         reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    WHILE           reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    DO              reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    FOR             reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)
    R_BRACE         reduce using rule 98 (dowhile -> DO while_paso1_codigo bloque WHILE L_PARENTHESIS exp R_PARENTHESIS dowhile_paso4_codigo SEMICOLON .)


state 258

    (55) opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .

    MULTIPLY        reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    DIVIDE          reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    PLUS            reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    MINUS           reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    L_THAN          reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    G_THAN          reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    EQUALS_C        reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    DIFFERENT       reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    LE_THAN         reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    GE_THAN         reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    AND             reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    OR              reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    SEMICOLON       reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    R_PARENTHESIS   reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    R_BRACKET       reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)
    COMA            reduce using rule 55 (opidfactor -> L_PARENTHESIS seen_llamada_func_factor listargs R_PARENTHESIS gosub .)


state 259

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo . R_PARENTHESIS bloque for_paso5_codigo

    R_PARENTHESIS   shift and go to state 267


state 260

    (101) listaincrement -> COMA . increment
    (100) increment -> . asignacion listaincrement
    (42) asignacion -> . ID opesarr EQUALS seen_equals castono equals_pendiente

    ID              shift and go to state 248

    asignacion                     shift and go to state 247
    increment                      shift and go to state 268

state 261

    (102) listaincrement -> e .

    R_PARENTHESIS   reduce using rule 102 (listaincrement -> e .)


state 262

    (100) increment -> asignacion listaincrement .

    R_PARENTHESIS   reduce using rule 100 (increment -> asignacion listaincrement .)


state 263

    (41) llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .

    RETURN          reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    ID              reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    IF              reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    PRINT           reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    SCAN            reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    WHILE           reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    DO              reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    FOR             reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    R_BRACE         reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    INTEGER         reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    FLOAT           reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    STRING          reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    CHAR            reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)
    BOOLEAN         reduce using rule 41 (llamafunc -> ID seen_id_factor seen_llamada_func L_PARENTHESIS listargs R_PARENTHESIS seen_verifica_cant_args gosub SEMICOLON .)


state 264

    (106) elif -> ELIF L_PARENTHESIS exp . if_paso4_codigo R_PARENTHESIS bloque
    (151) if_paso4_codigo -> .

    R_PARENTHESIS   reduce using rule 151 (if_paso4_codigo -> .)

    if_paso4_codigo                shift and go to state 269

state 265

    (107) else -> if_paso3_codigo ELSE . bloque
    (27) bloque -> . L_BRACE listaestatutos R_BRACE

    L_BRACE         shift and go to state 83

    bloque                         shift and go to state 270

state 266

    (103) if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .

    RETURN          reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    ID              reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    IF              reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    PRINT           reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    SCAN            reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    WHILE           reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    DO              reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    FOR             reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    R_BRACE         reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    INTEGER         reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    FLOAT           reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    STRING          reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    CHAR            reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)
    BOOLEAN         reduce using rule 103 (if -> IF L_PARENTHESIS exp if_paso1_codigo R_PARENTHESIS bloque listaelif else if_paso2_codigo .)


state 267

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS . bloque for_paso5_codigo
    (27) bloque -> . L_BRACE listaestatutos R_BRACE

    L_BRACE         shift and go to state 83

    bloque                         shift and go to state 271

state 268

    (101) listaincrement -> COMA increment .

    R_PARENTHESIS   reduce using rule 101 (listaincrement -> COMA increment .)


state 269

    (106) elif -> ELIF L_PARENTHESIS exp if_paso4_codigo . R_PARENTHESIS bloque

    R_PARENTHESIS   shift and go to state 272


state 270

    (107) else -> if_paso3_codigo ELSE bloque .

    RETURN          reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    ID              reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    IF              reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    PRINT           reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    SCAN            reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    INTEGER         reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    FLOAT           reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    STRING          reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    CHAR            reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    BOOLEAN         reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    WHILE           reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    DO              reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    FOR             reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)
    R_BRACE         reduce using rule 107 (else -> if_paso3_codigo ELSE bloque .)


state 271

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque . for_paso5_codigo
    (160) for_paso5_codigo -> .

    RETURN          reduce using rule 160 (for_paso5_codigo -> .)
    ID              reduce using rule 160 (for_paso5_codigo -> .)
    IF              reduce using rule 160 (for_paso5_codigo -> .)
    PRINT           reduce using rule 160 (for_paso5_codigo -> .)
    SCAN            reduce using rule 160 (for_paso5_codigo -> .)
    INTEGER         reduce using rule 160 (for_paso5_codigo -> .)
    FLOAT           reduce using rule 160 (for_paso5_codigo -> .)
    STRING          reduce using rule 160 (for_paso5_codigo -> .)
    CHAR            reduce using rule 160 (for_paso5_codigo -> .)
    BOOLEAN         reduce using rule 160 (for_paso5_codigo -> .)
    WHILE           reduce using rule 160 (for_paso5_codigo -> .)
    DO              reduce using rule 160 (for_paso5_codigo -> .)
    FOR             reduce using rule 160 (for_paso5_codigo -> .)
    R_BRACE         reduce using rule 160 (for_paso5_codigo -> .)

    for_paso5_codigo               shift and go to state 273

state 272

    (106) elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS . bloque
    (27) bloque -> . L_BRACE listaestatutos R_BRACE

    L_BRACE         shift and go to state 83

    bloque                         shift and go to state 274

state 273

    (99) for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .

    RETURN          reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    ID              reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    IF              reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    PRINT           reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    SCAN            reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    INTEGER         reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    FLOAT           reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    STRING          reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    CHAR            reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    BOOLEAN         reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    WHILE           reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    DO              reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    FOR             reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)
    R_BRACE         reduce using rule 99 (for -> FOR for_paso1_codigo L_PARENTHESIS exp for_paso2_codigo SEMICOLON for_paso3_codigo increment for_paso4_codigo R_PARENTHESIS bloque for_paso5_codigo .)


state 274

    (106) elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .

    ELIF            reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    ELSE            reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    RETURN          reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    ID              reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    IF              reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    PRINT           reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    SCAN            reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    INTEGER         reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    FLOAT           reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    STRING          reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    CHAR            reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    BOOLEAN         reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    WHILE           reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    DO              reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    FOR             reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)
    R_BRACE         reduce using rule 106 (elif -> ELIF L_PARENTHESIS exp if_paso4_codigo R_PARENTHESIS bloque .)

